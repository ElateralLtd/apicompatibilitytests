{
	"definitions": {
		"collection": {
			"type": "object",
			"properties": {
				"count": {
					"type": "number"
				}
			}
		},
		"ref": {
			"type": "object",
			"required": ["ref"],
			"properties": {
				"ref": {
					"type": "string",
					"description": "The `ref` of the associated document."
				}
			}
		},
		"refs": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"account": {
			"type": "object",
			"required": ["fqdn"],
			"properties": {
				"name": {
					"type": "string",
					"description": "The name of the account."
				},
				"fqdn": {
					"type": "string",
					"description": "The accounts fully qualified domain name (unique)."
				},
				"secret": {
					"type": "string",
					"description": "The accounts secret."
				},
				"system": {
					"type": "boolean",
					"description": "true if this is a system account, otherwise false."
				},
				"style": {
					"type": "object",
					"description": "an object hash for the storage of account style information."
				}
			}
		},
		"accounts": {
			"allOf": [{
				"type": "object",
				"properties": {
					"count": {
						"type": "number"
					}
				}
			},
			{
				"properties": {
					"results": {
						"type": "array",
						"items": {
							"type": "object",
							"required": ["fqdn"],
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the account."
								},
								"fqdn": {
									"type": "string",
									"description": "The accounts fully qualified domain name (unique)."
								},
								"secret": {
									"type": "string",
									"description": "The accounts secret."
								},
								"system": {
									"type": "boolean",
									"description": "true if this is a system account, otherwise false."
								},
								"style": {
									"type": "object",
									"description": "an object hash for the storage of account style information."
								}
							}
						}
					}
				}
			}]
		},
		"address": {
			"type": "object",
			"properties": {
				"alias": {
					"type": "string",
					"description": "The alias of the address."
				},
				"countryCode": {
					"type": "string",
					"description": "ISO 3166-2 country code of the address"
				},
				"lines": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"description": "Individual address lines"
				},
				"email": {
					"type": "string",
					"description": "Email address"
				},
				"title": {
					"type": "string",
					"description": "Person's title"
				},
				"firstName": {
					"type": "string",
					"description": "Person's first name"
				},
				"lastName": {
					"type": "string",
					"description": "Person's last name"
				}
			}
		},
		"addresses": {
			"allOf": [{
				"type": "object",
				"properties": {
					"count": {
						"type": "number"
					}
				}
			},
			{
				"properties": {
					"results": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"alias": {
									"type": "string",
									"description": "The alias of the address."
								},
								"countryCode": {
									"type": "string",
									"description": "ISO 3166-2 country code of the address"
								},
								"lines": {
									"type": "array",
									"items": {
										"type": "string"
									},
									"description": "Individual address lines"
								},
								"email": {
									"type": "string",
									"description": "Email address"
								},
								"title": {
									"type": "string",
									"description": "Person's title"
								},
								"firstName": {
									"type": "string",
									"description": "Person's first name"
								},
								"lastName": {
									"type": "string",
									"description": "Person's last name"
								}
							}
						}
					}
				}
			}]
		},
		"artwork": {
			"allOf": [{
				"type": "object",
				"required": ["name"],
				"properties": {
					"name": {
						"type": "string",
						"description": "The name of the initiative."
					},
					"description": {
						"type": "string",
						"description": "The description of the initiative."
					},
					"start": {
						"type": "string",
						"format": "date-time",
						"description": "The start date of the initiative."
					},
					"end": {
						"type": "string",
						"format": "date-time",
						"description": "The end date of the initiative."
					},
					"active": {
						"type": "boolean",
						"description": "The active flag of this initiative."
					},
					"activatedAt": {
						"type": "string",
						"format": "date-time",
						"description": "The activation date of the initiative."
					},
					"metadata": {
						"type": "array",
						"description": "A list of metadata references associated to the initiative.",
						"default": [],
						"items": {
							"type": "string"
						}
					},
					"properties": {
						"type": "object",
						"description": "A application specific properties collection.",
						"default": {
							
						}
					}
				}
			},
			{
				"properties": {
					"parent": {
						"type": "string",
						"description": "The reference to the initiative for the artwork.",
						"example": "57b44089d85ca91b0007e0f7"
					},
					"brief": {
						"type": "string",
						"description": "The reference to the brief for the artwork.",
						"example": "57b44089d85ca91b0007e0f7"
					}
				}
			}]
		},
		"artworks": {
			"allOf": [{
				"allOf": [{
					"type": "object",
					"properties": {
						"count": {
							"type": "number"
						}
					}
				},
				{
					"properties": {
						"results": {
							"type": "array",
							"items": {
								"type": "object",
								"required": ["name"],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the initiative."
									},
									"description": {
										"type": "string",
										"description": "The description of the initiative."
									},
									"start": {
										"type": "string",
										"format": "date-time",
										"description": "The start date of the initiative."
									},
									"end": {
										"type": "string",
										"format": "date-time",
										"description": "The end date of the initiative."
									},
									"active": {
										"type": "boolean",
										"description": "The active flag of this initiative."
									},
									"activatedAt": {
										"type": "string",
										"format": "date-time",
										"description": "The activation date of the initiative."
									},
									"metadata": {
										"type": "array",
										"description": "A list of metadata references associated to the initiative.",
										"default": [],
										"items": {
											"type": "string"
										}
									},
									"properties": {
										"type": "object",
										"description": "A application specific properties collection.",
										"default": {
											
										}
									}
								}
							}
						}
					}
				}]
			}]
		},
		"audit-item": {
			"type": "object",
			"properties": {
				"eventCategory": {
					"type": "string",
					"description": "The category of the audit event."
				},
				"eventType": {
					"type": "string",
					"description": "The type of the audit event category"
				},
				"name": {
					"type": "string",
					"description": "display name of the audit event."
				},
				"entityRef": {
					"type": "string",
					"description": "Document reference of the entity being audited"
				},
				"eventDateTime": {
					"type": "string",
					"format": "date-time",
					"description": "Event date"
				},
				"eventSourceName": {
					"type": "string",
					"description": "Name of the audit event's source, usually the user"
				},
				"eventSourceRef": {
					"type": "string",
					"description": "Document reference of event source"
				}
			}
		},
		"audit": {
			"allOf": [{
				"type": "object",
				"properties": {
					"count": {
						"type": "number"
					}
				}
			},
			{
				"properties": {
					"results": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"eventCategory": {
									"type": "string",
									"description": "The category of the audit event."
								},
								"eventType": {
									"type": "string",
									"description": "The type of the audit event category"
								},
								"name": {
									"type": "string",
									"description": "display name of the audit event."
								},
								"entityRef": {
									"type": "string",
									"description": "Document reference of the entity being audited"
								},
								"eventDateTime": {
									"type": "string",
									"format": "date-time",
									"description": "Event date"
								},
								"eventSourceName": {
									"type": "string",
									"description": "Name of the audit event's source, usually the user"
								},
								"eventSourceRef": {
									"type": "string",
									"description": "Document reference of event source"
								}
							}
						}
					}
				}
			}]
		},
		"brief": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string",
					"description": "The name of the brief."
				},
				"initiative": {
					"type": "string",
					"description": "Initiative ID for which the brief was created"
				},
				"items": {
					"type": "array",
					"items": {
						"type": "object"
					},
					"description": "List of items added to the brief"
				},
				"properties": {
					"type": "object",
					"description": "Additional properties for the brief"
				}
			}
		},
		"briefs": {
			"allOf": [{
				"type": "object",
				"properties": {
					"count": {
						"type": "number"
					}
				}
			},
			{
				"properties": {
					"results": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the brief."
								},
								"initiative": {
									"type": "string",
									"description": "Initiative ID for which the brief was created"
								},
								"items": {
									"type": "array",
									"items": {
										"type": "object"
									},
									"description": "List of items added to the brief"
								},
								"properties": {
									"type": "object",
									"description": "Additional properties for the brief"
								}
							}
						}
					}
				}
			}]
		},
		"briefRequest": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string",
					"description": "The name of the brief."
				},
				"initiative": {
					"type": "string",
					"description": "Initiative ID for which the brief was created"
				},
				"items": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"artwork_type": {
								"type": "string",
								"description": "Artwork type of the item"
							},
							"components": {
								"type": "array",
								"items": {
									"type": "object"
								},
								"description": "Conditional component definitions"
							},
							"fields": {
								"type": "object",
								"description": "Fields for the item"
							},
							"location": {
								"type": "object",
								"description": "Location metadata associated with this brief request item"
							},
							"key_visual": {
								"type": "string",
								"description": "Key Visual filename of the item"
							},
							"thumbnail": {
								"type": "string",
								"description": "Thumbnail filename of the item"
							},
							"version": {
								"type": "number",
								"description": "Version of the brief request item config"
							}
						}
					},
					"description": "List of items added to the brief"
				},
				"properties": {
					"type": "object",
					"description": "Additional properties for the brief"
				},
				"status": {
					"type": "string",
					"description": "State of the brief"
				}
			}
		},
		"briefRequestItems": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"artwork_type": {
						"type": "string",
						"description": "Artwork type of the item"
					},
					"components": {
						"type": "array",
						"items": {
							"type": "object"
						},
						"description": "Conditional component definitions"
					},
					"fields": {
						"type": "object",
						"description": "Fields for the item"
					},
					"location": {
						"type": "object",
						"description": "Location metadata associated with this brief request item"
					},
					"key_visual": {
						"type": "string",
						"description": "Key Visual filename of the item"
					},
					"thumbnail": {
						"type": "string",
						"description": "Thumbnail filename of the item"
					},
					"version": {
						"type": "number",
						"description": "Version of the brief request item config"
					}
				}
			}
		},
		"briefItem": {
			"type": "object",
			"properties": {
				"artwork_type": {
					"type": "string",
					"description": "Artwork type of the item"
				},
				"components": {
					"type": "array",
					"items": {
						"type": "object"
					},
					"description": "Conditional component definitions"
				},
				"fields": {
					"type": "object",
					"description": "Fields for the item"
				},
				"location": {
					"type": "object",
					"description": "Location metadata associated with this brief request item"
				},
				"key_visual": {
					"type": "string",
					"description": "Key Visual filename of the item"
				},
				"thumbnail": {
					"type": "string",
					"description": "Thumbnail filename of the item"
				},
				"version": {
					"type": "number",
					"description": "Version of the brief request item config"
				}
			}
		},
		"briefRequestItem": {
			"type": "object",
			"properties": {
				"artwork_type": {
					"type": "string",
					"description": "Artwork type of the item"
				},
				"name": {
					"type": "string",
					"description": "Name of the item"
				},
				"status": {
					"type": "string",
					"description": "Status of the item"
				},
				"active": {
					"type": "boolean",
					"description": "Approval status of the item"
				},
				"resource": {
					"type": "object",
					"description": "HighRes resource of the item"
				},
				"thumbnail": {
					"type": "object",
					"description": "Thumbnail resource of the item"
				},
				"key_visual": {
					"type": "string",
					"description": "Key Visual filename of the item"
				},
				"preview": {
					"type": "object",
					"description": "Preview Resource of the item"
				},
				"previewVersions": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"version": {
								"type": "number",
								"description": "Automatically incrementing version number"
							},
							"resource": {
								"type": "object",
								"description": "Preview Resource of the item"
							}
						}
					}
				},
				"location": {
					"type": "object",
					"description": "Location metadata associated with this brief request item"
				},
				"components": {
					"type": "array",
					"items": {
						"type": "object"
					},
					"description": "Conditional component definitions"
				},
				"fields": {
					"type": "object",
					"description": "Fields for the item"
				},
				"version": {
					"type": "number",
					"description": "Version of the brief request item config"
				},
				"code": {
					"type": "string",
					"description": "Agency code of the item"
				}
			}
		},
		"briefRequests": {
			"allOf": [{
				"type": "object",
				"properties": {
					"count": {
						"type": "number"
					}
				}
			},
			{
				"properties": {
					"results": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the brief."
								},
								"initiative": {
									"type": "string",
									"description": "Initiative ID for which the brief was created"
								},
								"items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"artwork_type": {
												"type": "string",
												"description": "Artwork type of the item"
											},
											"components": {
												"type": "array",
												"items": {
													"type": "object"
												},
												"description": "Conditional component definitions"
											},
											"fields": {
												"type": "object",
												"description": "Fields for the item"
											},
											"location": {
												"type": "object",
												"description": "Location metadata associated with this brief request item"
											},
											"key_visual": {
												"type": "string",
												"description": "Key Visual filename of the item"
											},
											"thumbnail": {
												"type": "string",
												"description": "Thumbnail filename of the item"
											},
											"version": {
												"type": "number",
												"description": "Version of the brief request item config"
											}
										}
									},
									"description": "List of items added to the brief"
								},
								"properties": {
									"type": "object",
									"description": "Additional properties for the brief"
								},
								"status": {
									"type": "string",
									"description": "State of the brief"
								}
							}
						}
					}
				}
			}]
		},
		"cartItem": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string",
					"description": "the name of the artwork for this cart item"
				},
				"thumbnail": {
					"type": "string",
					"description": "the url to the artwork thumbnail for this cart item"
				},
				"finalArtwork": {
					"type": "string",
					"description": "the url to the final artwork for this cart item"
				},
				"artworkType": {
					"type": "string",
					"description": "the type of artwork for this cart item"
				},
				"location": {
					"type": "string",
					"description": "the location for this cart item"
				},
				"fulfilment": {
					"type": "string",
					"description": "the fulfilment for this cart item"
				},
				"qty": {
					"type": "number",
					"description": "the quantity required"
				},
				"partner": {
					"type": "string",
					"description": "a reference to the underlying production partner for this cart item"
				},
				"artwork": {
					"type": "string",
					"description": "a reference to the underlying artwork from which this item was created"
				},
				"initiative": {
					"type": "string",
					"description": "a reference to the underlying iniatitive for the artwork from which this item was created"
				},
				"address": {
					"type": "string",
					"description": "a reference to the address for this cart item"
				},
				"comments": {
					"type": "string",
					"description": "comments entered for this cart item"
				}
			}
		},
		"cart": {
			"type": "object",
			"properties": {
				"count": {
					"type": "number",
					"description": "The number of items the cart contains."
				}
			}
		},
		"cartItems": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "the name of the artwork for this cart item"
					},
					"thumbnail": {
						"type": "string",
						"description": "the url to the artwork thumbnail for this cart item"
					},
					"finalArtwork": {
						"type": "string",
						"description": "the url to the final artwork for this cart item"
					},
					"artworkType": {
						"type": "string",
						"description": "the type of artwork for this cart item"
					},
					"location": {
						"type": "string",
						"description": "the location for this cart item"
					},
					"fulfilment": {
						"type": "string",
						"description": "the fulfilment for this cart item"
					},
					"qty": {
						"type": "number",
						"description": "the quantity required"
					},
					"partner": {
						"type": "string",
						"description": "a reference to the underlying production partner for this cart item"
					},
					"artwork": {
						"type": "string",
						"description": "a reference to the underlying artwork from which this item was created"
					},
					"initiative": {
						"type": "string",
						"description": "a reference to the underlying iniatitive for the artwork from which this item was created"
					},
					"address": {
						"type": "string",
						"description": "a reference to the address for this cart item"
					},
					"comments": {
						"type": "string",
						"description": "comments entered for this cart item"
					}
				}
			}
		},
		"carts": {
			"allOf": [{
				"type": "object",
				"properties": {
					"count": {
						"type": "number"
					}
				}
			},
			{
				"properties": {
					"results": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"count": {
									"type": "number",
									"description": "The number of items the cart contains."
								}
							}
						}
					}
				}
			}]
		},
		"comment": {
			"type": "object",
			"properties": {
				"text": {
					"type": "string",
					"description": "The content of the comment"
				},
				"meta": {
					"type": "object",
					"description": "Extra metadata associated with this comment"
				}
			}
		},
		"thread": {
			"type": "object",
			"properties": {
				"comments": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"text": {
								"type": "string",
								"description": "The content of the comment"
							},
							"meta": {
								"type": "object",
								"description": "Extra metadata associated with this comment"
							}
						}
					}
				}
			}
		},
		"comments": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"text": {
						"type": "string",
						"description": "The content of the comment"
					},
					"meta": {
						"type": "object",
						"description": "Extra metadata associated with this comment"
					}
				}
			}
		},
		"content": {
			"type": "object",
			"required": ["name"],
			"properties": {
				"name": {
					"type": "string",
					"description": "The name of the initiative."
				},
				"description": {
					"type": "string",
					"description": "The description of the initiative."
				},
				"start": {
					"type": "string",
					"format": "date-time",
					"description": "The start date of the initiative."
				},
				"end": {
					"type": "string",
					"format": "date-time",
					"description": "The end date of the initiative."
				},
				"active": {
					"type": "boolean",
					"description": "The active flag of this initiative."
				},
				"activatedAt": {
					"type": "string",
					"format": "date-time",
					"description": "The activation date of the initiative."
				},
				"metadata": {
					"type": "array",
					"description": "A list of metadata references associated to the initiative.",
					"default": [],
					"items": {
						"type": "string"
					}
				},
				"properties": {
					"type": "object",
					"description": "A application specific properties collection.",
					"default": {
						
					}
				}
			}
		},
		"contents": {
			"allOf": [{
				"type": "object",
				"properties": {
					"count": {
						"type": "number"
					}
				}
			},
			{
				"properties": {
					"results": {
						"type": "array",
						"items": {
							"type": "object",
							"required": ["name"],
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the initiative."
								},
								"description": {
									"type": "string",
									"description": "The description of the initiative."
								},
								"start": {
									"type": "string",
									"format": "date-time",
									"description": "The start date of the initiative."
								},
								"end": {
									"type": "string",
									"format": "date-time",
									"description": "The end date of the initiative."
								},
								"active": {
									"type": "boolean",
									"description": "The active flag of this initiative."
								},
								"activatedAt": {
									"type": "string",
									"format": "date-time",
									"description": "The activation date of the initiative."
								},
								"metadata": {
									"type": "array",
									"description": "A list of metadata references associated to the initiative.",
									"default": [],
									"items": {
										"type": "string"
									}
								},
								"properties": {
									"type": "object",
									"description": "A application specific properties collection.",
									"default": {
										
									}
								}
							}
						}
					}
				}
			}]
		},
		"initiative": {
			"allOf": [{
				"type": "object",
				"required": ["name"],
				"properties": {
					"name": {
						"type": "string",
						"description": "The name of the initiative."
					},
					"description": {
						"type": "string",
						"description": "The description of the initiative."
					},
					"start": {
						"type": "string",
						"format": "date-time",
						"description": "The start date of the initiative."
					},
					"end": {
						"type": "string",
						"format": "date-time",
						"description": "The end date of the initiative."
					},
					"active": {
						"type": "boolean",
						"description": "The active flag of this initiative."
					},
					"activatedAt": {
						"type": "string",
						"format": "date-time",
						"description": "The activation date of the initiative."
					},
					"metadata": {
						"type": "array",
						"description": "A list of metadata references associated to the initiative.",
						"default": [],
						"items": {
							"type": "string"
						}
					},
					"properties": {
						"type": "object",
						"description": "A application specific properties collection.",
						"default": {
							
						}
					}
				}
			},
			{
				"properties": {
					"briefUrl": {
						"type": "string",
						"description": "URL to the Brief.",
						"example": "https://briefs.elateral.io/brief/abc123.html"
					},
					"group": {
						"type": "string",
						"description": "Type of the initiative"
					}
				}
			}]
		},
		"initiatives": {
			"allOf": [{
				"allOf": [{
					"type": "object",
					"properties": {
						"count": {
							"type": "number"
						}
					}
				},
				{
					"properties": {
						"results": {
							"type": "array",
							"items": {
								"type": "object",
								"required": ["name"],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the initiative."
									},
									"description": {
										"type": "string",
										"description": "The description of the initiative."
									},
									"start": {
										"type": "string",
										"format": "date-time",
										"description": "The start date of the initiative."
									},
									"end": {
										"type": "string",
										"format": "date-time",
										"description": "The end date of the initiative."
									},
									"active": {
										"type": "boolean",
										"description": "The active flag of this initiative."
									},
									"activatedAt": {
										"type": "string",
										"format": "date-time",
										"description": "The activation date of the initiative."
									},
									"metadata": {
										"type": "array",
										"description": "A list of metadata references associated to the initiative.",
										"default": [],
										"items": {
											"type": "string"
										}
									},
									"properties": {
										"type": "object",
										"description": "A application specific properties collection.",
										"default": {
											
										}
									}
								}
							}
						}
					}
				}]
			}]
		},
		"metadata-item": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string",
					"description": "The name of the metadata item."
				},
				"parent": {
					"type": "string",
					"description": "The document reference of the filesystems items parent."
				}
			}
		},
		"metadata": {
			"allOf": [{
				"type": "object",
				"properties": {
					"count": {
						"type": "number"
					}
				}
			},
			{
				"properties": {
					"results": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the metadata item."
								},
								"parent": {
									"type": "string",
									"description": "The document reference of the filesystems items parent."
								}
							}
						}
					}
				}
			}]
		},
		"oauthCredentials": {
			"type": "object",
			"required": ["grant_type"],
			"properties": {
				"username": {
					"type": "string",
					"description": "The users username."
				},
				"password": {
					"type": "string",
					"description": "The users password."
				},
				"refresh_token": {
					"type": "string",
					"description": "The refresh token from a previous oauth request."
				},
				"grant_type": {
					"type": "string",
					"description": "The grant type for this authentication request."
				}
			}
		},
		"oauthToken": {
			"type": "object",
			"required": ["access_token"],
			"properties": {
				"access_token": {
					"type": "string",
					"description": "A valid authorization token."
				}
			}
		},
		"cartRef": {
			"type": "object",
			"required": ["cart"],
			"properties": {
				"cart": {
					"type": "string",
					"description": "A reference to a cart document."
				}
			}
		},
		"order": {
			"type": "object",
			"properties": {
				"items": {
					"type": "array",
					"description": "The order lines.",
					"items": {
						"type": "object"
					}
				}
			}
		},
		"orders": {
			"allOf": [{
				"type": "object",
				"properties": {
					"count": {
						"type": "number"
					}
				}
			},
			{
				"properties": {
					"results": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"items": {
									"type": "array",
									"description": "The order lines.",
									"items": {
										"type": "object"
									}
								}
							}
						}
					}
				}
			}]
		},
		"partner": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string",
					"description": "the name of the partner"
				},
				"sftp": {
					"type": "object",
					"properties": {
						"uri": {
							"type": "string",
							"description": "the full uri of the partners sftp"
						},
						"private_key": {
							"type": "string",
							"description": "the value of the private key for the partners sftp"
						}
					}
				},
				"contacts": {
					"type": "array",
					"description": "contacts associated with this partner",
					"items": {
						"type": "object",
						"properties": {
							"firstname": {
								"type": "string",
								"description": "firstname of the contact"
							},
							"surname": {
								"type": "string",
								"description": "surname of the contact"
							},
							"email": {
								"type": "string",
								"description": "email of the contact"
							}
						}
					}
				},
				"location": {
					"type": "array",
					"description": "locations associated with this partner",
					"items": {
						"type": "string",
						"description": "single location"
					}
				},
				"region": {
					"type": "string",
					"description": "the region for this partner"
				},
				"order": {
					"type": "object",
					"properties": {
						"requireQuantity": {
							"type": "boolean",
							"description": "true if this partner requires quantity to be sent with order, otherwise false.",
							"example": false
						},
						"requireDeliveryAddress": {
							"type": "boolean",
							"description": "true if this partner requires delivery address to be sent with order, otherwise false.",
							"example": false
						}
					}
				}
			}
		},
		"resource": {
			"type": "object",
			"required": ["filename"],
			"properties": {
				"mimeType": {
					"type": "string",
					"description": "The content type of the uploaded file."
				},
				"filename": {
					"type": "string",
					"description": "The filesystem name when the resource was uploaded.",
					"maxLength": 256
				},
				"uri": {
					"type": "string",
					"description": "The uri of the file once uploaded."
				}
			}
		},
		"resources": {
			"allOf": [{
				"type": "object",
				"properties": {
					"count": {
						"type": "number"
					}
				}
			},
			{
				"properties": {
					"results": {
						"type": "array",
						"items": {
							"type": "object",
							"required": ["filename"],
							"properties": {
								"mimeType": {
									"type": "string",
									"description": "The content type of the uploaded file."
								},
								"filename": {
									"type": "string",
									"description": "The filesystem name when the resource was uploaded.",
									"maxLength": 256
								},
								"uri": {
									"type": "string",
									"description": "The uri of the file once uploaded."
								}
							}
						}
					}
				}
			}]
		},
		"blobDetails": {
			"type": "object",
			"required": ["blob",
			"uuid",
			"name"],
			"properties": {
				"blob": {
					"type": "string",
					"description": "Name of the stored blob"
				},
				"uuid": {
					"type": "string",
					"description": "UUID of the blob"
				},
				"name": {
					"type": "string",
					"description": "Original file name of the file uploaded"
				},
				"container": {
					"type": "string",
					"description": "URI of the container that stores the blob"
				}
			}
		},
		"appPermission": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string",
					"description": "The name of the `app` permission."
				},
				"values": {
					"type": "array",
					"description": "A collection of permissions values.",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"permissions": {
			"type": "object",
			"properties": {
				"app": {
					"type": "array",
					"description": "A collection of application permissions.",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "The name of the `app` permission."
							},
							"values": {
								"type": "array",
								"description": "A collection of permissions values.",
								"items": {
									"type": "string"
								}
							}
						}
					}
				},
				"content": {
					"type": "array",
					"description": "A list of metadata references.",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"role": {
			"type": "object",
			"required": ["name"],
			"properties": {
				"name": {
					"type": "string",
					"description": "The roles name."
				},
				"permissions": {
					"type": "object",
					"properties": {
						"app": {
							"type": "array",
							"description": "A collection of application permissions.",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the `app` permission."
									},
									"values": {
										"type": "array",
										"description": "A collection of permissions values.",
										"items": {
											"type": "string"
										}
									}
								}
							}
						},
						"content": {
							"type": "array",
							"description": "A list of metadata references.",
							"items": {
								"type": "string"
							}
						}
					}
				}
			}
		},
		"roles": {
			"allOf": [{
				"type": "object",
				"properties": {
					"count": {
						"type": "number"
					}
				}
			},
			{
				"properties": {
					"results": {
						"type": "array",
						"items": {
							"type": "object",
							"required": ["name"],
							"properties": {
								"name": {
									"type": "string",
									"description": "The roles name."
								},
								"permissions": {
									"type": "object",
									"properties": {
										"app": {
											"type": "array",
											"description": "A collection of application permissions.",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string",
														"description": "The name of the `app` permission."
													},
													"values": {
														"type": "array",
														"description": "A collection of permissions values.",
														"items": {
															"type": "string"
														}
													}
												}
											}
										},
										"content": {
											"type": "array",
											"description": "A list of metadata references.",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					}
				}
			}]
		},
		"ssoEntry": {
			"type": "object",
			"properties": {
				"displayName": {
					"type": "string",
					"description": "The display name of the SSO Entry."
				},
				"name": {
					"type": "string",
					"description": "The name of the SSO Entry (used as the SourceId parameter)."
				},
				"idpLoginUrl": {
					"type": "string",
					"description": "The Login URL of the Identify Provider"
				},
				"idpLogoutUrl": {
					"type": "string",
					"description": "The Logout URL of the Identify Provider"
				},
				"idpCert": {
					"type": "string",
					"description": "The Signing Certificate of the Identity Provider"
				},
				"spCert": {
					"type": "string",
					"description": "The Signing Certificate of the Service Provider"
				},
				"spPrivateKey": {
					"type": "string",
					"description": "The Private Key for the Servie Provider signing requests"
				},
				"createUserIfNotExist": {
					"type": "boolean",
					"description": "Should a user be created on login if it does not already exist"
				},
				"registerUrl": {
					"type": "string",
					"description": "Used to show registration page if user does not exist and\ncreateUserIfNotExist is false\n"
				}
			}
		},
		"ssoEntries": {
			"allOf": [{
				"type": "object",
				"properties": {
					"count": {
						"type": "number"
					}
				}
			},
			{
				"properties": {
					"results": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"displayName": {
									"type": "string",
									"description": "The display name of the SSO Entry."
								},
								"name": {
									"type": "string",
									"description": "The name of the SSO Entry (used as the SourceId parameter)."
								},
								"idpLoginUrl": {
									"type": "string",
									"description": "The Login URL of the Identify Provider"
								},
								"idpLogoutUrl": {
									"type": "string",
									"description": "The Logout URL of the Identify Provider"
								},
								"idpCert": {
									"type": "string",
									"description": "The Signing Certificate of the Identity Provider"
								},
								"spCert": {
									"type": "string",
									"description": "The Signing Certificate of the Service Provider"
								},
								"spPrivateKey": {
									"type": "string",
									"description": "The Private Key for the Servie Provider signing requests"
								},
								"createUserIfNotExist": {
									"type": "boolean",
									"description": "Should a user be created on login if it does not already exist"
								},
								"registerUrl": {
									"type": "string",
									"description": "Used to show registration page if user does not exist and\ncreateUserIfNotExist is false\n"
								}
							}
						}
					}
				}
			}]
		},
		"samlPost": {
			"type": "object",
			"required": ["SAMLResponse"],
			"properties": {
				"SAMLResponse": {
					"type": "string",
					"description": "The SAML Response from the IDP."
				}
			}
		},
		"samlReturn": {
			"type": "object",
			"required": ["access_token"],
			"properties": {
				"access_token": {
					"type": "string",
					"description": "A valid authorization token."
				}
			}
		},
		"ssoPublic": {
			"type": "object",
			"properties": {
				"displayName": {
					"type": "string",
					"description": "The display name of the SSO Entry."
				},
				"name": {
					"type": "string",
					"description": "The name of the SSO Entry (used as the SourceId parameter)."
				},
				"idpLoginUrl": {
					"type": "string",
					"description": "URL for SSO users to be redirected to for logins"
				},
				"registerUrl": {
					"type": "string",
					"description": "Used to show registration page if user does not exist and\ncreateUserIfNotExist is false\n"
				}
			}
		},
		"import": {
			"type": "object",
			"required": ["type",
			"uri"],
			"properties": {
				"type": {
					"type": "string",
					"description": "The type of data being imported into the system.",
					"enum": ["brand",
					"location",
					"artwork-type",
					"users"]
				},
				"uri": {
					"type": "string",
					"description": "The uri of the file to import."
				}
			}
		},
		"imports": {
			"type": "array",
			"items": {
				"type": "object"
			}
		},
		"export": {
			"type": "object",
			"required": ["type"],
			"properties": {
				"type": {
					"type": "string",
					"description": "The type of data being exported from the system.",
					"enum": ["brand",
					"location",
					"artwork-type",
					"users"]
				},
				"format": {
					"type": "string",
					"description": "The format of the exported data.",
					"enum": ["xlsx"]
				}
			}
		},
		"credentials": {
			"type": "object",
			"required": ["username",
			"password"],
			"properties": {
				"username": {
					"type": "string",
					"description": "The users username.",
					"minLength": 5,
					"maxLength": 10
				},
				"password": {
					"type": "string",
					"description": "The users password."
				}
			}
		},
		"token": {
			"type": "object",
			"required": ["token",
			"password"],
			"properties": {
				"token": {
					"type": "string",
					"description": "The activation token."
				},
				"password": {
					"type": "string",
					"description": "The users password."
				}
			}
		},
		"user": {
			"type": "object",
			"required": ["firstName",
			"lastName",
			"username",
			"email"],
			"properties": {
				"firstName": {
					"type": "string",
					"description": "The users first name."
				},
				"lastName": {
					"type": "string",
					"description": "The users last name."
				},
				"username": {
					"type": "string",
					"description": "The users username (unique)."
				},
				"email": {
					"type": "string",
					"format": "email",
					"description": "The users email address."
				},
				"password": {
					"type": "string",
					"description": "The users password."
				},
				"language": {
					"type": "string",
					"description": "The users default language."
				},
				"status": {
					"type": "number",
					"description": "The status of the user; 0 ~ inactive, 1 ~ active",
					"enum": [0,
					1]
				},
				"timeZone": {
					"type": "string",
					"description": "The users default time zone."
				},
				"roles": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"defaultAddress": {
					"type": "string",
					"description": "A ref to the user's default address"
				},
				"agencyCode": {
					"type": "string",
					"description": "Short code to represent the agency the user represents"
				},
				"ssoEntry": {
					"type": "string",
					"description": "The reference to the SSOEntry for this user (for a non-SSO user, use null)"
				},
				"phone": {
					"type": "string",
					"description": "User's phone number"
				}
			}
		},
		"users": {
			"allOf": [{
				"type": "object",
				"properties": {
					"count": {
						"type": "number"
					}
				}
			},
			{
				"properties": {
					"results": {
						"type": "array",
						"items": {
							"type": "object",
							"required": ["firstName",
							"lastName",
							"username",
							"email"],
							"properties": {
								"firstName": {
									"type": "string",
									"description": "The users first name."
								},
								"lastName": {
									"type": "string",
									"description": "The users last name."
								},
								"username": {
									"type": "string",
									"description": "The users username (unique)."
								},
								"email": {
									"type": "string",
									"format": "email",
									"description": "The users email address."
								},
								"password": {
									"type": "string",
									"description": "The users password."
								},
								"language": {
									"type": "string",
									"description": "The users default language."
								},
								"status": {
									"type": "number",
									"description": "The status of the user; 0 ~ inactive, 1 ~ active",
									"enum": [0,
									1]
								},
								"timeZone": {
									"type": "string",
									"description": "The users default time zone."
								},
								"roles": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"defaultAddress": {
									"type": "string",
									"description": "A ref to the user's default address"
								},
								"agencyCode": {
									"type": "string",
									"description": "Short code to represent the agency the user represents"
								},
								"ssoEntry": {
									"type": "string",
									"description": "The reference to the SSOEntry for this user (for a non-SSO user, use null)"
								},
								"phone": {
									"type": "string",
									"description": "User's phone number"
								}
							}
						}
					}
				}
			}]
		},
		"error": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"message": {
					"type": "string"
				},
				"status": {
					"type": "integer",
					"format": "int32"
				},
				"stack": {
					"type": "string"
				}
			}
		}
	},
	"parameters": {
		"client-id": {
			"name": "X_CLIENT_ID",
			"description": "The id of the client requesting the token.",
			"in": "header",
			"required": true,
			"type": "string"
		},
		"token": {
			"name": "Authorization",
			"description": "The `bearer` token.",
			"in": "header",
			"required": true,
			"type": "string"
		},
		"limit": {
			"name": "limit",
			"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
			"in": "query",
			"type": "number"
		},
		"skip": {
			"name": "skip",
			"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
			"in": "query",
			"type": "number"
		},
		"sort": {
			"name": "sort",
			"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
			"in": "query",
			"type": "string"
		},
		"query": {
			"name": "query",
			"description": "Filters the results based on the supplied criteria e.g. `?query={\"name\":\"Bob\"}\nto filter the results to those documents with a name property of __Bob__\n",
			"in": "query",
			"type": "string",
			"default": "{}"
		},
		"populate": {
			"name": "populate",
			"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
			"in": "query",
			"type": "string"
		},
		"select": {
			"name": "select",
			"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
			"in": "query",
			"type": "string"
		},
		"tree": {
			"name": "tree",
			"description": "Use this parameter to build a metadata tree.\n",
			"in": "query",
			"type": "boolean"
		},
		"depth": {
			"name": "depth",
			"description": "Use this parameter to retrict the depth of the metadata tree.\n",
			"in": "query",
			"type": "number"
		},
		"ref": {
			"name": "ref",
			"description": "Use this path parameter to define the id of the document object.\n",
			"in": "path",
			"required": true,
			"type": "string"
		},
		"initiative": {
			"name": "initiative",
			"description": "Use this path parameter to define the reference to an initiative.\n",
			"in": "path",
			"required": true,
			"type": "string"
		},
		"cart": {
			"name": "cart",
			"description": "Use this path parameter to define the reference to a cart.",
			"in": "path",
			"required": true,
			"type": "string"
		},
		"agency": {
			"name": "agency",
			"description": "This parameter defines wether the brief request list is filtered by agency code",
			"in": "query",
			"type": "string"
		},
		"briefRequest": {
			"name": "briefRequest",
			"description": "Use this path parameter to define the reference to a briefRequest.",
			"in": "path",
			"required": true,
			"type": "string"
		},
		"thread": {
			"name": "thread",
			"description": "Use this path parameter to define the reference to a comment thread.",
			"in": "path",
			"required": true,
			"type": "string"
		},
		"component": {
			"name": "component",
			"description": "The type of component required.",
			"in": "path",
			"required": true,
			"type": "string",
			"enum": ["rectangle",
			"text",
			"image"]
		},
		"bloburi": {
			"name": "bloburi",
			"description": "Use this parameter to provide the bloburi that you require a signature for\n",
			"in": "query",
			"required": true,
			"type": "string"
		},
		"_method": {
			"name": "_method",
			"description": "The method being performed\n",
			"in": "query",
			"required": true,
			"type": "string"
		}
	},
	"swagger": "2.0",
	"info": {
		"title": "Elateral API",
		"description": "Access your marketing templates using the Elateral API.",
		"version": "0.0.1"
	},
	"host": "api.elateral-dev.io",
	"schemes": ["https"],
	"basePath": "/v1",
	"consumes": ["application/json"],
	"produces": ["application/json"],
	"securityDefinitions": {
		"token": {
			"type": "apiKey",
			"in": "header",
			"name": "Authorization"
		}
	},
	"paths": {
		"/accounts": {
			"get": {
				"summary": "Retrieve all accounts.",
				"description": "This endpoint returns all accounts controlled by the **Elateral** api.\n",
				"operationId": "getAccounts",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "query",
					"description": "Filters the results based on the supplied criteria e.g. `?query={\"name\":\"Bob\"}\nto filter the results to those documents with a name property of __Bob__\n",
					"in": "query",
					"type": "string",
					"default": "{}"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Account"],
				"responses": {
					"200": {
						"description": "All accounts.",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"count": {
										"type": "number"
									}
								}
							},
							{
								"properties": {
									"results": {
										"type": "array",
										"items": {
											"type": "object",
											"required": ["fqdn"],
											"properties": {
												"name": {
													"type": "string",
													"description": "The name of the account."
												},
												"fqdn": {
													"type": "string",
													"description": "The accounts fully qualified domain name (unique)."
												},
												"secret": {
													"type": "string",
													"description": "The accounts secret."
												},
												"system": {
													"type": "boolean",
													"description": "true if this is a system account, otherwise false."
												},
												"style": {
													"type": "object",
													"description": "an object hash for the storage of account style information."
												}
											}
										}
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a account.",
				"description": "This endpoint enables the creation of a account document.\n",
				"operationId": "createAccount",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "account",
					"description": "The new account details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["fqdn"],
						"properties": {
							"name": {
								"type": "string",
								"description": "The name of the account."
							},
							"fqdn": {
								"type": "string",
								"description": "The accounts fully qualified domain name (unique)."
							},
							"secret": {
								"type": "string",
								"description": "The accounts secret."
							},
							"system": {
								"type": "boolean",
								"description": "true if this is a system account, otherwise false."
							},
							"style": {
								"type": "object",
								"description": "an object hash for the storage of account style information."
							}
						}
					}
				}],
				"tags": ["Account"],
				"responses": {
					"201": {
						"description": "The new account.",
						"schema": {
							"type": "object",
							"required": ["fqdn"],
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the account."
								},
								"fqdn": {
									"type": "string",
									"description": "The accounts fully qualified domain name (unique)."
								},
								"secret": {
									"type": "string",
									"description": "The accounts secret."
								},
								"system": {
									"type": "boolean",
									"description": "true if this is a system account, otherwise false."
								},
								"style": {
									"type": "object",
									"description": "an object hash for the storage of account style information."
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{ref}": {
			"get": {
				"summary": "Retrieve a account by its reference.",
				"description": "This endpoint returns the account identified by the supplied `ref`erence path parameter.\n",
				"operationId": "getAccount",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Account"],
				"responses": {
					"200": {
						"description": "The account.",
						"schema": {
							"type": "object",
							"required": ["fqdn"],
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the account."
								},
								"fqdn": {
									"type": "string",
									"description": "The accounts fully qualified domain name (unique)."
								},
								"secret": {
									"type": "string",
									"description": "The accounts secret."
								},
								"system": {
									"type": "boolean",
									"description": "true if this is a system account, otherwise false."
								},
								"style": {
									"type": "object",
									"description": "an object hash for the storage of account style information."
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Modify a account by its reference.",
				"description": "This endpoint modifies the account identified by the supplied `ref`erence path parameter.\n",
				"operationId": "modifyAccount",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "account",
					"description": "The modified account's details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["fqdn"],
						"properties": {
							"name": {
								"type": "string",
								"description": "The name of the account."
							},
							"fqdn": {
								"type": "string",
								"description": "The accounts fully qualified domain name (unique)."
							},
							"secret": {
								"type": "string",
								"description": "The accounts secret."
							},
							"system": {
								"type": "boolean",
								"description": "true if this is a system account, otherwise false."
							},
							"style": {
								"type": "object",
								"description": "an object hash for the storage of account style information."
							}
						}
					}
				}],
				"tags": ["Account"],
				"responses": {
					"200": {
						"description": "The updated account.",
						"schema": {
							"type": "object",
							"required": ["fqdn"],
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the account."
								},
								"fqdn": {
									"type": "string",
									"description": "The accounts fully qualified domain name (unique)."
								},
								"secret": {
									"type": "string",
									"description": "The accounts secret."
								},
								"system": {
									"type": "boolean",
									"description": "true if this is a system account, otherwise false."
								},
								"style": {
									"type": "object",
									"description": "an object hash for the storage of account style information."
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a account by its reference.",
				"description": "This endpoint deletes the account identified by the supplied `ref`erence path parameter.\n",
				"operationId": "deleteAccount",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Account"],
				"responses": {
					"204": {
						"description": "Deleted the account."
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/addresses": {
			"get": {
				"summary": "Retrieve all addresses.",
				"description": "This endpoint returns all addresses controlled by the **Elateral** api.\n",
				"operationId": "getAddresses",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "query",
					"description": "Filters the results based on the supplied criteria e.g. `?query={\"name\":\"Bob\"}\nto filter the results to those documents with a name property of __Bob__\n",
					"in": "query",
					"type": "string",
					"default": "{}"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Address"],
				"responses": {
					"200": {
						"description": "All addresses.",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"count": {
										"type": "number"
									}
								}
							},
							{
								"properties": {
									"results": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"alias": {
													"type": "string",
													"description": "The alias of the address."
												},
												"countryCode": {
													"type": "string",
													"description": "ISO 3166-2 country code of the address"
												},
												"lines": {
													"type": "array",
													"items": {
														"type": "string"
													},
													"description": "Individual address lines"
												},
												"email": {
													"type": "string",
													"description": "Email address"
												},
												"title": {
													"type": "string",
													"description": "Person's title"
												},
												"firstName": {
													"type": "string",
													"description": "Person's first name"
												},
												"lastName": {
													"type": "string",
													"description": "Person's last name"
												}
											}
										}
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create an address.",
				"description": "This endpoint enables the creation of an address document.\n",
				"operationId": "createAddress",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "address",
					"description": "The new address details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"alias": {
								"type": "string",
								"description": "The alias of the address."
							},
							"countryCode": {
								"type": "string",
								"description": "ISO 3166-2 country code of the address"
							},
							"lines": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"description": "Individual address lines"
							},
							"email": {
								"type": "string",
								"description": "Email address"
							},
							"title": {
								"type": "string",
								"description": "Person's title"
							},
							"firstName": {
								"type": "string",
								"description": "Person's first name"
							},
							"lastName": {
								"type": "string",
								"description": "Person's last name"
							}
						}
					}
				}],
				"tags": ["Address"],
				"responses": {
					"201": {
						"description": "The new address.",
						"schema": {
							"type": "object",
							"properties": {
								"alias": {
									"type": "string",
									"description": "The alias of the address."
								},
								"countryCode": {
									"type": "string",
									"description": "ISO 3166-2 country code of the address"
								},
								"lines": {
									"type": "array",
									"items": {
										"type": "string"
									},
									"description": "Individual address lines"
								},
								"email": {
									"type": "string",
									"description": "Email address"
								},
								"title": {
									"type": "string",
									"description": "Person's title"
								},
								"firstName": {
									"type": "string",
									"description": "Person's first name"
								},
								"lastName": {
									"type": "string",
									"description": "Person's last name"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/addresses/{ref}": {
			"get": {
				"summary": "Retrieve an address by its reference.",
				"description": "This endpoint returns the address identified by the supplied `ref`erence path parameter.\n",
				"operationId": "getAddress",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Address"],
				"responses": {
					"200": {
						"description": "The address.",
						"schema": {
							"type": "object",
							"properties": {
								"alias": {
									"type": "string",
									"description": "The alias of the address."
								},
								"countryCode": {
									"type": "string",
									"description": "ISO 3166-2 country code of the address"
								},
								"lines": {
									"type": "array",
									"items": {
										"type": "string"
									},
									"description": "Individual address lines"
								},
								"email": {
									"type": "string",
									"description": "Email address"
								},
								"title": {
									"type": "string",
									"description": "Person's title"
								},
								"firstName": {
									"type": "string",
									"description": "Person's first name"
								},
								"lastName": {
									"type": "string",
									"description": "Person's last name"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Modify an address by its reference.",
				"description": "This endpoint modifies the address identified by the supplied `ref`erence path parameter.\n",
				"operationId": "modifyAddress",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "address",
					"description": "The modified address's details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"alias": {
								"type": "string",
								"description": "The alias of the address."
							},
							"countryCode": {
								"type": "string",
								"description": "ISO 3166-2 country code of the address"
							},
							"lines": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"description": "Individual address lines"
							},
							"email": {
								"type": "string",
								"description": "Email address"
							},
							"title": {
								"type": "string",
								"description": "Person's title"
							},
							"firstName": {
								"type": "string",
								"description": "Person's first name"
							},
							"lastName": {
								"type": "string",
								"description": "Person's last name"
							}
						}
					}
				}],
				"tags": ["Address"],
				"responses": {
					"200": {
						"description": "The updated address.",
						"schema": {
							"type": "object",
							"properties": {
								"alias": {
									"type": "string",
									"description": "The alias of the address."
								},
								"countryCode": {
									"type": "string",
									"description": "ISO 3166-2 country code of the address"
								},
								"lines": {
									"type": "array",
									"items": {
										"type": "string"
									},
									"description": "Individual address lines"
								},
								"email": {
									"type": "string",
									"description": "Email address"
								},
								"title": {
									"type": "string",
									"description": "Person's title"
								},
								"firstName": {
									"type": "string",
									"description": "Person's first name"
								},
								"lastName": {
									"type": "string",
									"description": "Person's last name"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an address by its reference.",
				"description": "This endpoint deletes the address identified by the supplied `ref`erence path parameter.\n",
				"operationId": "deleteAddress",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Address"],
				"responses": {
					"204": {
						"description": "Deleted the address."
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/initiatives/{initiative}/artwork": {
			"get": {
				"summary": "Retrieve the artwork for an initiative.",
				"description": "This endpoint returns all artwork for an initiative.\n",
				"operationId": "getAllArtwork",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "initiative",
					"description": "Use this path parameter to define the reference to an initiative.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "query",
					"description": "Filters the results based on the supplied criteria e.g. `?query={\"name\":\"Bob\"}\nto filter the results to those documents with a name property of __Bob__\n",
					"in": "query",
					"type": "string",
					"default": "{}"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Artwork"],
				"responses": {
					"200": {
						"description": "All artwork items.",
						"schema": {
							"allOf": [{
								"allOf": [{
									"type": "object",
									"properties": {
										"count": {
											"type": "number"
										}
									}
								},
								{
									"properties": {
										"results": {
											"type": "array",
											"items": {
												"type": "object",
												"required": ["name"],
												"properties": {
													"name": {
														"type": "string",
														"description": "The name of the initiative."
													},
													"description": {
														"type": "string",
														"description": "The description of the initiative."
													},
													"start": {
														"type": "string",
														"format": "date-time",
														"description": "The start date of the initiative."
													},
													"end": {
														"type": "string",
														"format": "date-time",
														"description": "The end date of the initiative."
													},
													"active": {
														"type": "boolean",
														"description": "The active flag of this initiative."
													},
													"activatedAt": {
														"type": "string",
														"format": "date-time",
														"description": "The activation date of the initiative."
													},
													"metadata": {
														"type": "array",
														"description": "A list of metadata references associated to the initiative.",
														"default": [],
														"items": {
															"type": "string"
														}
													},
													"properties": {
														"type": "object",
														"description": "A application specific properties collection.",
														"default": {
															
														}
													}
												}
											}
										}
									}
								}]
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create an artwork item for the associated initiative.",
				"description": "This endpoint enables clients to create artwork associated with an initiative.\n",
				"operationId": "createArtwork",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "initiative",
					"description": "Use this path parameter to define the reference to an initiative.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "artwork",
					"description": "The new artwork details.",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"required": ["name"],
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the initiative."
								},
								"description": {
									"type": "string",
									"description": "The description of the initiative."
								},
								"start": {
									"type": "string",
									"format": "date-time",
									"description": "The start date of the initiative."
								},
								"end": {
									"type": "string",
									"format": "date-time",
									"description": "The end date of the initiative."
								},
								"active": {
									"type": "boolean",
									"description": "The active flag of this initiative."
								},
								"activatedAt": {
									"type": "string",
									"format": "date-time",
									"description": "The activation date of the initiative."
								},
								"metadata": {
									"type": "array",
									"description": "A list of metadata references associated to the initiative.",
									"default": [],
									"items": {
										"type": "string"
									}
								},
								"properties": {
									"type": "object",
									"description": "A application specific properties collection.",
									"default": {
										
									}
								}
							}
						},
						{
							"properties": {
								"parent": {
									"type": "string",
									"description": "The reference to the initiative for the artwork.",
									"example": "57b44089d85ca91b0007e0f7"
								},
								"brief": {
									"type": "string",
									"description": "The reference to the brief for the artwork.",
									"example": "57b44089d85ca91b0007e0f7"
								}
							}
						}]
					}
				}],
				"tags": ["Artwork"],
				"responses": {
					"201": {
						"description": "The new artwork.",
						"schema": {
							"allOf": [{
								"type": "object",
								"required": ["name"],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the initiative."
									},
									"description": {
										"type": "string",
										"description": "The description of the initiative."
									},
									"start": {
										"type": "string",
										"format": "date-time",
										"description": "The start date of the initiative."
									},
									"end": {
										"type": "string",
										"format": "date-time",
										"description": "The end date of the initiative."
									},
									"active": {
										"type": "boolean",
										"description": "The active flag of this initiative."
									},
									"activatedAt": {
										"type": "string",
										"format": "date-time",
										"description": "The activation date of the initiative."
									},
									"metadata": {
										"type": "array",
										"description": "A list of metadata references associated to the initiative.",
										"default": [],
										"items": {
											"type": "string"
										}
									},
									"properties": {
										"type": "object",
										"description": "A application specific properties collection.",
										"default": {
											
										}
									}
								}
							},
							{
								"properties": {
									"parent": {
										"type": "string",
										"description": "The reference to the initiative for the artwork.",
										"example": "57b44089d85ca91b0007e0f7"
									},
									"brief": {
										"type": "string",
										"description": "The reference to the brief for the artwork.",
										"example": "57b44089d85ca91b0007e0f7"
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/initiatives/{initiative}/artwork/{ref}": {
			"get": {
				"summary": "Retrieve initiative artwork by its reference.",
				"description": "This endpoint returns the artwork identified by its reference for the supplied initiative.\n",
				"operationId": "getArtwork",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "initiative",
					"description": "Use this path parameter to define the reference to an initiative.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Artwork"],
				"responses": {
					"200": {
						"description": "The artwork item.",
						"schema": {
							"allOf": [{
								"type": "object",
								"required": ["name"],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the initiative."
									},
									"description": {
										"type": "string",
										"description": "The description of the initiative."
									},
									"start": {
										"type": "string",
										"format": "date-time",
										"description": "The start date of the initiative."
									},
									"end": {
										"type": "string",
										"format": "date-time",
										"description": "The end date of the initiative."
									},
									"active": {
										"type": "boolean",
										"description": "The active flag of this initiative."
									},
									"activatedAt": {
										"type": "string",
										"format": "date-time",
										"description": "The activation date of the initiative."
									},
									"metadata": {
										"type": "array",
										"description": "A list of metadata references associated to the initiative.",
										"default": [],
										"items": {
											"type": "string"
										}
									},
									"properties": {
										"type": "object",
										"description": "A application specific properties collection.",
										"default": {
											
										}
									}
								}
							},
							{
								"properties": {
									"parent": {
										"type": "string",
										"description": "The reference to the initiative for the artwork.",
										"example": "57b44089d85ca91b0007e0f7"
									},
									"brief": {
										"type": "string",
										"description": "The reference to the brief for the artwork.",
										"example": "57b44089d85ca91b0007e0f7"
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Modify an artwork item.",
				"description": "This endpoint modifies the artwork identified by its reference for the supplied initiative.\n",
				"operationId": "modifyArtwork",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "initiative",
					"description": "Use this path parameter to define the reference to an initiative.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "artwork",
					"description": "The modified artworks details.",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"required": ["name"],
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the initiative."
								},
								"description": {
									"type": "string",
									"description": "The description of the initiative."
								},
								"start": {
									"type": "string",
									"format": "date-time",
									"description": "The start date of the initiative."
								},
								"end": {
									"type": "string",
									"format": "date-time",
									"description": "The end date of the initiative."
								},
								"active": {
									"type": "boolean",
									"description": "The active flag of this initiative."
								},
								"activatedAt": {
									"type": "string",
									"format": "date-time",
									"description": "The activation date of the initiative."
								},
								"metadata": {
									"type": "array",
									"description": "A list of metadata references associated to the initiative.",
									"default": [],
									"items": {
										"type": "string"
									}
								},
								"properties": {
									"type": "object",
									"description": "A application specific properties collection.",
									"default": {
										
									}
								}
							}
						},
						{
							"properties": {
								"parent": {
									"type": "string",
									"description": "The reference to the initiative for the artwork.",
									"example": "57b44089d85ca91b0007e0f7"
								},
								"brief": {
									"type": "string",
									"description": "The reference to the brief for the artwork.",
									"example": "57b44089d85ca91b0007e0f7"
								}
							}
						}]
					}
				}],
				"tags": ["Artwork"],
				"responses": {
					"200": {
						"description": "The updated artwork.",
						"schema": {
							"allOf": [{
								"type": "object",
								"required": ["name"],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the initiative."
									},
									"description": {
										"type": "string",
										"description": "The description of the initiative."
									},
									"start": {
										"type": "string",
										"format": "date-time",
										"description": "The start date of the initiative."
									},
									"end": {
										"type": "string",
										"format": "date-time",
										"description": "The end date of the initiative."
									},
									"active": {
										"type": "boolean",
										"description": "The active flag of this initiative."
									},
									"activatedAt": {
										"type": "string",
										"format": "date-time",
										"description": "The activation date of the initiative."
									},
									"metadata": {
										"type": "array",
										"description": "A list of metadata references associated to the initiative.",
										"default": [],
										"items": {
											"type": "string"
										}
									},
									"properties": {
										"type": "object",
										"description": "A application specific properties collection.",
										"default": {
											
										}
									}
								}
							},
							{
								"properties": {
									"parent": {
										"type": "string",
										"description": "The reference to the initiative for the artwork.",
										"example": "57b44089d85ca91b0007e0f7"
									},
									"brief": {
										"type": "string",
										"description": "The reference to the brief for the artwork.",
										"example": "57b44089d85ca91b0007e0f7"
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete artwork by its reference.",
				"description": "This endpoint deletes the artwork identified by its reference for the supplied initiative.\n",
				"operationId": "deleteArtwork",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "initiative",
					"description": "Use this path parameter to define the reference to an initiative.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Artwork"],
				"responses": {
					"204": {
						"description": "Deleted the artwork."
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/audit": {
			"get": {
				"summary": "Retrieve all audit.",
				"description": "This endpoint returns all audit controlled by the **Elateral** api.\n",
				"operationId": "getAuditItems",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "query",
					"description": "Filters the results based on the supplied criteria e.g. `?query={\"name\":\"Bob\"}\nto filter the results to those documents with a name property of __Bob__\n",
					"in": "query",
					"type": "string",
					"default": "{}"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Audit"],
				"responses": {
					"200": {
						"description": "All audit.",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"count": {
										"type": "number"
									}
								}
							},
							{
								"properties": {
									"results": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"eventCategory": {
													"type": "string",
													"description": "The category of the audit event."
												},
												"eventType": {
													"type": "string",
													"description": "The type of the audit event category"
												},
												"name": {
													"type": "string",
													"description": "display name of the audit event."
												},
												"entityRef": {
													"type": "string",
													"description": "Document reference of the entity being audited"
												},
												"eventDateTime": {
													"type": "string",
													"format": "date-time",
													"description": "Event date"
												},
												"eventSourceName": {
													"type": "string",
													"description": "Name of the audit event's source, usually the user"
												},
												"eventSourceRef": {
													"type": "string",
													"description": "Document reference of event source"
												}
											}
										}
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create an audit.",
				"description": "This endpoint enables the creation of an audit document.\n",
				"operationId": "createAuditItem",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "audit",
					"description": "The new audit details.",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"properties": {
								"count": {
									"type": "number"
								}
							}
						},
						{
							"properties": {
								"results": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"eventCategory": {
												"type": "string",
												"description": "The category of the audit event."
											},
											"eventType": {
												"type": "string",
												"description": "The type of the audit event category"
											},
											"name": {
												"type": "string",
												"description": "display name of the audit event."
											},
											"entityRef": {
												"type": "string",
												"description": "Document reference of the entity being audited"
											},
											"eventDateTime": {
												"type": "string",
												"format": "date-time",
												"description": "Event date"
											},
											"eventSourceName": {
												"type": "string",
												"description": "Name of the audit event's source, usually the user"
											},
											"eventSourceRef": {
												"type": "string",
												"description": "Document reference of event source"
											}
										}
									}
								}
							}
						}]
					}
				}],
				"tags": ["Audit"],
				"responses": {
					"201": {
						"description": "The new audit.",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"count": {
										"type": "number"
									}
								}
							},
							{
								"properties": {
									"results": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"eventCategory": {
													"type": "string",
													"description": "The category of the audit event."
												},
												"eventType": {
													"type": "string",
													"description": "The type of the audit event category"
												},
												"name": {
													"type": "string",
													"description": "display name of the audit event."
												},
												"entityRef": {
													"type": "string",
													"description": "Document reference of the entity being audited"
												},
												"eventDateTime": {
													"type": "string",
													"format": "date-time",
													"description": "Event date"
												},
												"eventSourceName": {
													"type": "string",
													"description": "Name of the audit event's source, usually the user"
												},
												"eventSourceRef": {
													"type": "string",
													"description": "Document reference of event source"
												}
											}
										}
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/audit/{ref}": {
			"get": {
				"summary": "Retrieve an audit by its reference.",
				"description": "This endpoint returns the audit identified by the supplied `ref`erence path parameter.\n",
				"operationId": "getAuditItem",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Audit"],
				"responses": {
					"200": {
						"description": "The audit.",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"count": {
										"type": "number"
									}
								}
							},
							{
								"properties": {
									"results": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"eventCategory": {
													"type": "string",
													"description": "The category of the audit event."
												},
												"eventType": {
													"type": "string",
													"description": "The type of the audit event category"
												},
												"name": {
													"type": "string",
													"description": "display name of the audit event."
												},
												"entityRef": {
													"type": "string",
													"description": "Document reference of the entity being audited"
												},
												"eventDateTime": {
													"type": "string",
													"format": "date-time",
													"description": "Event date"
												},
												"eventSourceName": {
													"type": "string",
													"description": "Name of the audit event's source, usually the user"
												},
												"eventSourceRef": {
													"type": "string",
													"description": "Document reference of event source"
												}
											}
										}
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Modify an audit by its reference.",
				"description": "This endpoint modifies the audit identified by the supplied `ref`erence path parameter.\n",
				"operationId": "modifyAuditItem",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "audit",
					"description": "The modified audit's details.",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"properties": {
								"count": {
									"type": "number"
								}
							}
						},
						{
							"properties": {
								"results": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"eventCategory": {
												"type": "string",
												"description": "The category of the audit event."
											},
											"eventType": {
												"type": "string",
												"description": "The type of the audit event category"
											},
											"name": {
												"type": "string",
												"description": "display name of the audit event."
											},
											"entityRef": {
												"type": "string",
												"description": "Document reference of the entity being audited"
											},
											"eventDateTime": {
												"type": "string",
												"format": "date-time",
												"description": "Event date"
											},
											"eventSourceName": {
												"type": "string",
												"description": "Name of the audit event's source, usually the user"
											},
											"eventSourceRef": {
												"type": "string",
												"description": "Document reference of event source"
											}
										}
									}
								}
							}
						}]
					}
				}],
				"tags": ["Audit"],
				"responses": {
					"200": {
						"description": "The updated audit.",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"count": {
										"type": "number"
									}
								}
							},
							{
								"properties": {
									"results": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"eventCategory": {
													"type": "string",
													"description": "The category of the audit event."
												},
												"eventType": {
													"type": "string",
													"description": "The type of the audit event category"
												},
												"name": {
													"type": "string",
													"description": "display name of the audit event."
												},
												"entityRef": {
													"type": "string",
													"description": "Document reference of the entity being audited"
												},
												"eventDateTime": {
													"type": "string",
													"format": "date-time",
													"description": "Event date"
												},
												"eventSourceName": {
													"type": "string",
													"description": "Name of the audit event's source, usually the user"
												},
												"eventSourceRef": {
													"type": "string",
													"description": "Document reference of event source"
												}
											}
										}
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an audit by its reference.",
				"description": "This endpoint deletes the audit identified by the supplied `ref`erence path parameter.\n",
				"operationId": "deleteAuditItem",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Audit"],
				"responses": {
					"204": {
						"description": "Deleted the audit."
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/briefs": {
			"get": {
				"summary": "Retrieve all briefs.",
				"description": "This endpoint returns all briefs controlled by the **Elateral** api.\n",
				"operationId": "getBriefs",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "query",
					"description": "Filters the results based on the supplied criteria e.g. `?query={\"name\":\"Bob\"}\nto filter the results to those documents with a name property of __Bob__\n",
					"in": "query",
					"type": "string",
					"default": "{}"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Brief"],
				"responses": {
					"200": {
						"description": "All briefs.",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"count": {
										"type": "number"
									}
								}
							},
							{
								"properties": {
									"results": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"name": {
													"type": "string",
													"description": "The name of the brief."
												},
												"initiative": {
													"type": "string",
													"description": "Initiative ID for which the brief was created"
												},
												"items": {
													"type": "array",
													"items": {
														"type": "object"
													},
													"description": "List of items added to the brief"
												},
												"properties": {
													"type": "object",
													"description": "Additional properties for the brief"
												}
											}
										}
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a brief.",
				"description": "This endpoint enables the creation of a brief document.\n",
				"operationId": "createBrief",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "brief",
					"description": "The new brief details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "The name of the brief."
							},
							"initiative": {
								"type": "string",
								"description": "Initiative ID for which the brief was created"
							},
							"items": {
								"type": "array",
								"items": {
									"type": "object"
								},
								"description": "List of items added to the brief"
							},
							"properties": {
								"type": "object",
								"description": "Additional properties for the brief"
							}
						}
					}
				}],
				"tags": ["Brief"],
				"responses": {
					"201": {
						"description": "The new brief.",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the brief."
								},
								"initiative": {
									"type": "string",
									"description": "Initiative ID for which the brief was created"
								},
								"items": {
									"type": "array",
									"items": {
										"type": "object"
									},
									"description": "List of items added to the brief"
								},
								"properties": {
									"type": "object",
									"description": "Additional properties for the brief"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/briefs/{ref}": {
			"get": {
				"summary": "Retrieve a brief by its reference.",
				"description": "This endpoint returns the brief identified by the supplied `ref`erence path parameter.\n",
				"operationId": "getBrief",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Brief"],
				"responses": {
					"200": {
						"description": "The brief.",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the brief."
								},
								"initiative": {
									"type": "string",
									"description": "Initiative ID for which the brief was created"
								},
								"items": {
									"type": "array",
									"items": {
										"type": "object"
									},
									"description": "List of items added to the brief"
								},
								"properties": {
									"type": "object",
									"description": "Additional properties for the brief"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Modify a brief by its reference.",
				"description": "This endpoint modifies the brief identified by the supplied `ref`erence path parameter.\n",
				"operationId": "modifyBrief",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "brief",
					"description": "The modified brief's details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "The name of the brief."
							},
							"initiative": {
								"type": "string",
								"description": "Initiative ID for which the brief was created"
							},
							"items": {
								"type": "array",
								"items": {
									"type": "object"
								},
								"description": "List of items added to the brief"
							},
							"properties": {
								"type": "object",
								"description": "Additional properties for the brief"
							}
						}
					}
				}],
				"tags": ["Brief"],
				"responses": {
					"200": {
						"description": "The updated brief.",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the brief."
								},
								"initiative": {
									"type": "string",
									"description": "Initiative ID for which the brief was created"
								},
								"items": {
									"type": "array",
									"items": {
										"type": "object"
									},
									"description": "List of items added to the brief"
								},
								"properties": {
									"type": "object",
									"description": "Additional properties for the brief"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a brief by its reference.",
				"description": "This endpoint deletes the brief identified by the supplied `ref`erence path parameter.\n",
				"operationId": "deleteBrief",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Brief"],
				"responses": {
					"204": {
						"description": "Deleted the brief."
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/briefRequests": {
			"get": {
				"summary": "Retrieve all briefs.",
				"description": "This endpoint returns all briefs controlled by the **Elateral** api.\n",
				"operationId": "getBriefRequests",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "query",
					"description": "Filters the results based on the supplied criteria e.g. `?query={\"name\":\"Bob\"}\nto filter the results to those documents with a name property of __Bob__\n",
					"in": "query",
					"type": "string",
					"default": "{}"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "agency",
					"description": "This parameter defines wether the brief request list is filtered by agency code",
					"in": "query",
					"type": "string"
				}],
				"tags": ["BriefRequests"],
				"responses": {
					"200": {
						"description": "All brief requests.",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"count": {
										"type": "number"
									}
								}
							},
							{
								"properties": {
									"results": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"name": {
													"type": "string",
													"description": "The name of the brief."
												},
												"initiative": {
													"type": "string",
													"description": "Initiative ID for which the brief was created"
												},
												"items": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"artwork_type": {
																"type": "string",
																"description": "Artwork type of the item"
															},
															"components": {
																"type": "array",
																"items": {
																	"type": "object"
																},
																"description": "Conditional component definitions"
															},
															"fields": {
																"type": "object",
																"description": "Fields for the item"
															},
															"location": {
																"type": "object",
																"description": "Location metadata associated with this brief request item"
															},
															"key_visual": {
																"type": "string",
																"description": "Key Visual filename of the item"
															},
															"thumbnail": {
																"type": "string",
																"description": "Thumbnail filename of the item"
															},
															"version": {
																"type": "number",
																"description": "Version of the brief request item config"
															}
														}
													},
													"description": "List of items added to the brief"
												},
												"properties": {
													"type": "object",
													"description": "Additional properties for the brief"
												},
												"status": {
													"type": "string",
													"description": "State of the brief"
												}
											}
										}
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a brief.",
				"description": "This endpoint enables the creation of a brief request document.\n",
				"operationId": "createBriefRequest",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "brief",
					"description": "The new brief details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "The name of the brief."
							},
							"initiative": {
								"type": "string",
								"description": "Initiative ID for which the brief was created"
							},
							"items": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"artwork_type": {
											"type": "string",
											"description": "Artwork type of the item"
										},
										"components": {
											"type": "array",
											"items": {
												"type": "object"
											},
											"description": "Conditional component definitions"
										},
										"fields": {
											"type": "object",
											"description": "Fields for the item"
										},
										"location": {
											"type": "object",
											"description": "Location metadata associated with this brief request item"
										},
										"key_visual": {
											"type": "string",
											"description": "Key Visual filename of the item"
										},
										"thumbnail": {
											"type": "string",
											"description": "Thumbnail filename of the item"
										},
										"version": {
											"type": "number",
											"description": "Version of the brief request item config"
										}
									}
								},
								"description": "List of items added to the brief"
							},
							"properties": {
								"type": "object",
								"description": "Additional properties for the brief"
							},
							"status": {
								"type": "string",
								"description": "State of the brief"
							}
						}
					}
				}],
				"tags": ["BriefRequests"],
				"responses": {
					"201": {
						"description": "The new brief.",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the brief."
								},
								"initiative": {
									"type": "string",
									"description": "Initiative ID for which the brief was created"
								},
								"items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"artwork_type": {
												"type": "string",
												"description": "Artwork type of the item"
											},
											"components": {
												"type": "array",
												"items": {
													"type": "object"
												},
												"description": "Conditional component definitions"
											},
											"fields": {
												"type": "object",
												"description": "Fields for the item"
											},
											"location": {
												"type": "object",
												"description": "Location metadata associated with this brief request item"
											},
											"key_visual": {
												"type": "string",
												"description": "Key Visual filename of the item"
											},
											"thumbnail": {
												"type": "string",
												"description": "Thumbnail filename of the item"
											},
											"version": {
												"type": "number",
												"description": "Version of the brief request item config"
											}
										}
									},
									"description": "List of items added to the brief"
								},
								"properties": {
									"type": "object",
									"description": "Additional properties for the brief"
								},
								"status": {
									"type": "string",
									"description": "State of the brief"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/myAgencyBriefRequests": {
			"get": {
				"summary": "Retrieve brief requests submitted to the agency this user represents",
				"description": "This endpoint returns the brief requests identified by the supplied `ref`erence path parameter.\n",
				"operationId": "getMyAgencyBriefRequests",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["BriefRequests"],
				"responses": {
					"200": {
						"description": "All brief requests for the agency.",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"count": {
										"type": "number"
									}
								}
							},
							{
								"properties": {
									"results": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"name": {
													"type": "string",
													"description": "The name of the brief."
												},
												"initiative": {
													"type": "string",
													"description": "Initiative ID for which the brief was created"
												},
												"items": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"artwork_type": {
																"type": "string",
																"description": "Artwork type of the item"
															},
															"components": {
																"type": "array",
																"items": {
																	"type": "object"
																},
																"description": "Conditional component definitions"
															},
															"fields": {
																"type": "object",
																"description": "Fields for the item"
															},
															"location": {
																"type": "object",
																"description": "Location metadata associated with this brief request item"
															},
															"key_visual": {
																"type": "string",
																"description": "Key Visual filename of the item"
															},
															"thumbnail": {
																"type": "string",
																"description": "Thumbnail filename of the item"
															},
															"version": {
																"type": "number",
																"description": "Version of the brief request item config"
															}
														}
													},
													"description": "List of items added to the brief"
												},
												"properties": {
													"type": "object",
													"description": "Additional properties for the brief"
												},
												"status": {
													"type": "string",
													"description": "State of the brief"
												}
											}
										}
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/myAgencyBriefRequests/{ref}": {
			"get": {
				"summary": "Retrieve a brief request by its reference.",
				"description": "This endpoint returns the brief requests identified by the supplied `ref`erence path parameter\nfiltered to the items the agencyCode for the user can see\n",
				"operationId": "getMyAgencyBriefRequest",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["BriefRequests"],
				"responses": {
					"200": {
						"description": "The brief.",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the brief."
								},
								"initiative": {
									"type": "string",
									"description": "Initiative ID for which the brief was created"
								},
								"items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"artwork_type": {
												"type": "string",
												"description": "Artwork type of the item"
											},
											"components": {
												"type": "array",
												"items": {
													"type": "object"
												},
												"description": "Conditional component definitions"
											},
											"fields": {
												"type": "object",
												"description": "Fields for the item"
											},
											"location": {
												"type": "object",
												"description": "Location metadata associated with this brief request item"
											},
											"key_visual": {
												"type": "string",
												"description": "Key Visual filename of the item"
											},
											"thumbnail": {
												"type": "string",
												"description": "Thumbnail filename of the item"
											},
											"version": {
												"type": "number",
												"description": "Version of the brief request item config"
											}
										}
									},
									"description": "List of items added to the brief"
								},
								"properties": {
									"type": "object",
									"description": "Additional properties for the brief"
								},
								"status": {
									"type": "string",
									"description": "State of the brief"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/briefRequests/{ref}": {
			"get": {
				"summary": "Retrieve a brief request by its reference.",
				"description": "This endpoint returns the brief requests identified by the supplied `ref`erence path parameter.\n",
				"operationId": "getBriefRequest",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["BriefRequests"],
				"responses": {
					"200": {
						"description": "The brief.",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the brief."
								},
								"initiative": {
									"type": "string",
									"description": "Initiative ID for which the brief was created"
								},
								"items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"artwork_type": {
												"type": "string",
												"description": "Artwork type of the item"
											},
											"components": {
												"type": "array",
												"items": {
													"type": "object"
												},
												"description": "Conditional component definitions"
											},
											"fields": {
												"type": "object",
												"description": "Fields for the item"
											},
											"location": {
												"type": "object",
												"description": "Location metadata associated with this brief request item"
											},
											"key_visual": {
												"type": "string",
												"description": "Key Visual filename of the item"
											},
											"thumbnail": {
												"type": "string",
												"description": "Thumbnail filename of the item"
											},
											"version": {
												"type": "number",
												"description": "Version of the brief request item config"
											}
										}
									},
									"description": "List of items added to the brief"
								},
								"properties": {
									"type": "object",
									"description": "Additional properties for the brief"
								},
								"status": {
									"type": "string",
									"description": "State of the brief"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Modify a brief request by its reference.",
				"description": "This endpoint modifies the brief requests identified by the supplied `ref`erence path parameter.\n",
				"operationId": "modifyBriefRequest",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "brief",
					"description": "The modified brief's details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "The name of the brief."
							},
							"initiative": {
								"type": "string",
								"description": "Initiative ID for which the brief was created"
							},
							"items": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"artwork_type": {
											"type": "string",
											"description": "Artwork type of the item"
										},
										"components": {
											"type": "array",
											"items": {
												"type": "object"
											},
											"description": "Conditional component definitions"
										},
										"fields": {
											"type": "object",
											"description": "Fields for the item"
										},
										"location": {
											"type": "object",
											"description": "Location metadata associated with this brief request item"
										},
										"key_visual": {
											"type": "string",
											"description": "Key Visual filename of the item"
										},
										"thumbnail": {
											"type": "string",
											"description": "Thumbnail filename of the item"
										},
										"version": {
											"type": "number",
											"description": "Version of the brief request item config"
										}
									}
								},
								"description": "List of items added to the brief"
							},
							"properties": {
								"type": "object",
								"description": "Additional properties for the brief"
							},
							"status": {
								"type": "string",
								"description": "State of the brief"
							}
						}
					}
				}],
				"tags": ["BriefRequests"],
				"responses": {
					"200": {
						"description": "The updated brief.",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the brief."
								},
								"initiative": {
									"type": "string",
									"description": "Initiative ID for which the brief was created"
								},
								"items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"artwork_type": {
												"type": "string",
												"description": "Artwork type of the item"
											},
											"components": {
												"type": "array",
												"items": {
													"type": "object"
												},
												"description": "Conditional component definitions"
											},
											"fields": {
												"type": "object",
												"description": "Fields for the item"
											},
											"location": {
												"type": "object",
												"description": "Location metadata associated with this brief request item"
											},
											"key_visual": {
												"type": "string",
												"description": "Key Visual filename of the item"
											},
											"thumbnail": {
												"type": "string",
												"description": "Thumbnail filename of the item"
											},
											"version": {
												"type": "number",
												"description": "Version of the brief request item config"
											}
										}
									},
									"description": "List of items added to the brief"
								},
								"properties": {
									"type": "object",
									"description": "Additional properties for the brief"
								},
								"status": {
									"type": "string",
									"description": "State of the brief"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a brief request by its reference.",
				"description": "This endpoint deletes the brief requests identified by the supplied `ref`erence path parameter.\n",
				"operationId": "deleteBriefRequest",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["BriefRequests"],
				"responses": {
					"204": {
						"description": "Deleted the brief."
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/briefRequests/{ref}/items": {
			"get": {
				"summary": "Retrieve a brief request's items.",
				"description": "This endpoint returns all items for the supplied brief request.",
				"operationId": "getBriefRequestItems",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["BriefRequests"],
				"responses": {
					"200": {
						"description": "All brief request items.",
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"artwork_type": {
										"type": "string",
										"description": "Artwork type of the item"
									},
									"components": {
										"type": "array",
										"items": {
											"type": "object"
										},
										"description": "Conditional component definitions"
									},
									"fields": {
										"type": "object",
										"description": "Fields for the item"
									},
									"location": {
										"type": "object",
										"description": "Location metadata associated with this brief request item"
									},
									"key_visual": {
										"type": "string",
										"description": "Key Visual filename of the item"
									},
									"thumbnail": {
										"type": "string",
										"description": "Thumbnail filename of the item"
									},
									"version": {
										"type": "number",
										"description": "Version of the brief request item config"
									}
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a new item.",
				"description": "This endpoint enables clients to create an item for a briefRequest.",
				"operationId": "createBriefRequestItem",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "item",
					"description": "The new briefRequest item.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"artwork_type": {
								"type": "string",
								"description": "Artwork type of the item"
							},
							"name": {
								"type": "string",
								"description": "Name of the item"
							},
							"status": {
								"type": "string",
								"description": "Status of the item"
							},
							"active": {
								"type": "boolean",
								"description": "Approval status of the item"
							},
							"resource": {
								"type": "object",
								"description": "HighRes resource of the item"
							},
							"thumbnail": {
								"type": "object",
								"description": "Thumbnail resource of the item"
							},
							"key_visual": {
								"type": "string",
								"description": "Key Visual filename of the item"
							},
							"preview": {
								"type": "object",
								"description": "Preview Resource of the item"
							},
							"previewVersions": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"version": {
											"type": "number",
											"description": "Automatically incrementing version number"
										},
										"resource": {
											"type": "object",
											"description": "Preview Resource of the item"
										}
									}
								}
							},
							"location": {
								"type": "object",
								"description": "Location metadata associated with this brief request item"
							},
							"components": {
								"type": "array",
								"items": {
									"type": "object"
								},
								"description": "Conditional component definitions"
							},
							"fields": {
								"type": "object",
								"description": "Fields for the item"
							},
							"version": {
								"type": "number",
								"description": "Version of the brief request item config"
							},
							"code": {
								"type": "string",
								"description": "Agency code of the item"
							}
						}
					}
				}],
				"tags": ["BriefRequests"],
				"responses": {
					"201": {
						"description": "The new briefRequest item.",
						"schema": {
							"type": "object",
							"properties": {
								"artwork_type": {
									"type": "string",
									"description": "Artwork type of the item"
								},
								"name": {
									"type": "string",
									"description": "Name of the item"
								},
								"status": {
									"type": "string",
									"description": "Status of the item"
								},
								"active": {
									"type": "boolean",
									"description": "Approval status of the item"
								},
								"resource": {
									"type": "object",
									"description": "HighRes resource of the item"
								},
								"thumbnail": {
									"type": "object",
									"description": "Thumbnail resource of the item"
								},
								"key_visual": {
									"type": "string",
									"description": "Key Visual filename of the item"
								},
								"preview": {
									"type": "object",
									"description": "Preview Resource of the item"
								},
								"previewVersions": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"version": {
												"type": "number",
												"description": "Automatically incrementing version number"
											},
											"resource": {
												"type": "object",
												"description": "Preview Resource of the item"
											}
										}
									}
								},
								"location": {
									"type": "object",
									"description": "Location metadata associated with this brief request item"
								},
								"components": {
									"type": "array",
									"items": {
										"type": "object"
									},
									"description": "Conditional component definitions"
								},
								"fields": {
									"type": "object",
									"description": "Fields for the item"
								},
								"version": {
									"type": "number",
									"description": "Version of the brief request item config"
								},
								"code": {
									"type": "string",
									"description": "Agency code of the item"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/briefRequests/{briefRequest}/items/{ref}": {
			"get": {
				"summary": "Retrieve a brief request item by its reference.",
				"description": "This endpoint returns the brief request item identified by the supplied `ref`erence path parameter.\n",
				"operationId": "getBriefRequestItem",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "briefRequest",
					"description": "Use this path parameter to define the reference to a briefRequest.",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["BriefRequests"],
				"responses": {
					"200": {
						"description": "The brief request item",
						"schema": {
							"type": "object",
							"properties": {
								"artwork_type": {
									"type": "string",
									"description": "Artwork type of the item"
								},
								"name": {
									"type": "string",
									"description": "Name of the item"
								},
								"status": {
									"type": "string",
									"description": "Status of the item"
								},
								"active": {
									"type": "boolean",
									"description": "Approval status of the item"
								},
								"resource": {
									"type": "object",
									"description": "HighRes resource of the item"
								},
								"thumbnail": {
									"type": "object",
									"description": "Thumbnail resource of the item"
								},
								"key_visual": {
									"type": "string",
									"description": "Key Visual filename of the item"
								},
								"preview": {
									"type": "object",
									"description": "Preview Resource of the item"
								},
								"previewVersions": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"version": {
												"type": "number",
												"description": "Automatically incrementing version number"
											},
											"resource": {
												"type": "object",
												"description": "Preview Resource of the item"
											}
										}
									}
								},
								"location": {
									"type": "object",
									"description": "Location metadata associated with this brief request item"
								},
								"components": {
									"type": "array",
									"items": {
										"type": "object"
									},
									"description": "Conditional component definitions"
								},
								"fields": {
									"type": "object",
									"description": "Fields for the item"
								},
								"version": {
									"type": "number",
									"description": "Version of the brief request item config"
								},
								"code": {
									"type": "string",
									"description": "Agency code of the item"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Modify a briefRequest item by its reference.",
				"description": "This endpoint modifies the briefRequest item identified by the supplied `ref`erence path parameter.\n",
				"operationId": "modifyBriefRequestItem",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "briefRequest",
					"description": "Use this path parameter to define the reference to a briefRequest.",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "item",
					"description": "The new briefRequest item.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"artwork_type": {
								"type": "string",
								"description": "Artwork type of the item"
							},
							"name": {
								"type": "string",
								"description": "Name of the item"
							},
							"status": {
								"type": "string",
								"description": "Status of the item"
							},
							"active": {
								"type": "boolean",
								"description": "Approval status of the item"
							},
							"resource": {
								"type": "object",
								"description": "HighRes resource of the item"
							},
							"thumbnail": {
								"type": "object",
								"description": "Thumbnail resource of the item"
							},
							"key_visual": {
								"type": "string",
								"description": "Key Visual filename of the item"
							},
							"preview": {
								"type": "object",
								"description": "Preview Resource of the item"
							},
							"previewVersions": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"version": {
											"type": "number",
											"description": "Automatically incrementing version number"
										},
										"resource": {
											"type": "object",
											"description": "Preview Resource of the item"
										}
									}
								}
							},
							"location": {
								"type": "object",
								"description": "Location metadata associated with this brief request item"
							},
							"components": {
								"type": "array",
								"items": {
									"type": "object"
								},
								"description": "Conditional component definitions"
							},
							"fields": {
								"type": "object",
								"description": "Fields for the item"
							},
							"version": {
								"type": "number",
								"description": "Version of the brief request item config"
							},
							"code": {
								"type": "string",
								"description": "Agency code of the item"
							}
						}
					}
				}],
				"tags": ["BriefRequests"],
				"responses": {
					"200": {
						"description": "The updated briefRequest item.",
						"schema": {
							"type": "object",
							"properties": {
								"artwork_type": {
									"type": "string",
									"description": "Artwork type of the item"
								},
								"name": {
									"type": "string",
									"description": "Name of the item"
								},
								"status": {
									"type": "string",
									"description": "Status of the item"
								},
								"active": {
									"type": "boolean",
									"description": "Approval status of the item"
								},
								"resource": {
									"type": "object",
									"description": "HighRes resource of the item"
								},
								"thumbnail": {
									"type": "object",
									"description": "Thumbnail resource of the item"
								},
								"key_visual": {
									"type": "string",
									"description": "Key Visual filename of the item"
								},
								"preview": {
									"type": "object",
									"description": "Preview Resource of the item"
								},
								"previewVersions": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"version": {
												"type": "number",
												"description": "Automatically incrementing version number"
											},
											"resource": {
												"type": "object",
												"description": "Preview Resource of the item"
											}
										}
									}
								},
								"location": {
									"type": "object",
									"description": "Location metadata associated with this brief request item"
								},
								"components": {
									"type": "array",
									"items": {
										"type": "object"
									},
									"description": "Conditional component definitions"
								},
								"fields": {
									"type": "object",
									"description": "Fields for the item"
								},
								"version": {
									"type": "number",
									"description": "Version of the brief request item config"
								},
								"code": {
									"type": "string",
									"description": "Agency code of the item"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/carts": {
			"get": {
				"summary": "Retrieve the carts for the supplied user.",
				"description": "This endpoint returns all carts.",
				"operationId": "getCarts",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "query",
					"description": "Filters the results based on the supplied criteria e.g. `?query={\"name\":\"Bob\"}\nto filter the results to those documents with a name property of __Bob__\n",
					"in": "query",
					"type": "string",
					"default": "{}"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Cart"],
				"responses": {
					"200": {
						"description": "All carts.",
						"schema": {
							"type": "object",
							"properties": {
								"count": {
									"type": "number",
									"description": "The number of items the cart contains."
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a cart.",
				"description": "This endpoint enables clients to create a cart.",
				"operationId": "createCart",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				}],
				"tags": ["Cart"],
				"responses": {
					"201": {
						"description": "The new cart.",
						"schema": {
							"type": "object",
							"properties": {
								"count": {
									"type": "number",
									"description": "The number of items the cart contains."
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/carts/{ref}": {
			"get": {
				"summary": "Retrieve a cart by its reference.",
				"description": "This endpoint returns the cart identified by its reference.\n",
				"operationId": "getCarts",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Cart"],
				"responses": {
					"200": {
						"description": "The cart item.",
						"schema": {
							"type": "object",
							"properties": {
								"count": {
									"type": "number",
									"description": "The number of items the cart contains."
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a cart by its reference.",
				"description": "This endpoint deletes the cart identified by its reference.\n",
				"operationId": "deleteCart",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Cart"],
				"responses": {
					"204": {
						"description": "Deleted the cart."
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/carts/{cart}/items": {
			"get": {
				"summary": "Retrieve a carts line items.",
				"description": "This endpoint returns all items for the supplied cart.",
				"operationId": "getCartItems",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "cart",
					"description": "Use this path parameter to define the reference to a cart.",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Cart"],
				"responses": {
					"200": {
						"description": "All cart items.",
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"description": "the name of the artwork for this cart item"
									},
									"thumbnail": {
										"type": "string",
										"description": "the url to the artwork thumbnail for this cart item"
									},
									"finalArtwork": {
										"type": "string",
										"description": "the url to the final artwork for this cart item"
									},
									"artworkType": {
										"type": "string",
										"description": "the type of artwork for this cart item"
									},
									"location": {
										"type": "string",
										"description": "the location for this cart item"
									},
									"fulfilment": {
										"type": "string",
										"description": "the fulfilment for this cart item"
									},
									"qty": {
										"type": "number",
										"description": "the quantity required"
									},
									"partner": {
										"type": "string",
										"description": "a reference to the underlying production partner for this cart item"
									},
									"artwork": {
										"type": "string",
										"description": "a reference to the underlying artwork from which this item was created"
									},
									"initiative": {
										"type": "string",
										"description": "a reference to the underlying iniatitive for the artwork from which this item was created"
									},
									"address": {
										"type": "string",
										"description": "a reference to the address for this cart item"
									},
									"comments": {
										"type": "string",
										"description": "comments entered for this cart item"
									}
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a new cart item.",
				"description": "This endpoint enables clients to create an item for a cart.",
				"operationId": "createCartItem",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "cart",
					"description": "Use this path parameter to define the reference to a cart.",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "item",
					"description": "The new cart item.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "the name of the artwork for this cart item"
							},
							"thumbnail": {
								"type": "string",
								"description": "the url to the artwork thumbnail for this cart item"
							},
							"finalArtwork": {
								"type": "string",
								"description": "the url to the final artwork for this cart item"
							},
							"artworkType": {
								"type": "string",
								"description": "the type of artwork for this cart item"
							},
							"location": {
								"type": "string",
								"description": "the location for this cart item"
							},
							"fulfilment": {
								"type": "string",
								"description": "the fulfilment for this cart item"
							},
							"qty": {
								"type": "number",
								"description": "the quantity required"
							},
							"partner": {
								"type": "string",
								"description": "a reference to the underlying production partner for this cart item"
							},
							"artwork": {
								"type": "string",
								"description": "a reference to the underlying artwork from which this item was created"
							},
							"initiative": {
								"type": "string",
								"description": "a reference to the underlying iniatitive for the artwork from which this item was created"
							},
							"address": {
								"type": "string",
								"description": "a reference to the address for this cart item"
							},
							"comments": {
								"type": "string",
								"description": "comments entered for this cart item"
							}
						}
					}
				}],
				"tags": ["Cart"],
				"responses": {
					"201": {
						"description": "The new cart item.",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "the name of the artwork for this cart item"
								},
								"thumbnail": {
									"type": "string",
									"description": "the url to the artwork thumbnail for this cart item"
								},
								"finalArtwork": {
									"type": "string",
									"description": "the url to the final artwork for this cart item"
								},
								"artworkType": {
									"type": "string",
									"description": "the type of artwork for this cart item"
								},
								"location": {
									"type": "string",
									"description": "the location for this cart item"
								},
								"fulfilment": {
									"type": "string",
									"description": "the fulfilment for this cart item"
								},
								"qty": {
									"type": "number",
									"description": "the quantity required"
								},
								"partner": {
									"type": "string",
									"description": "a reference to the underlying production partner for this cart item"
								},
								"artwork": {
									"type": "string",
									"description": "a reference to the underlying artwork from which this item was created"
								},
								"initiative": {
									"type": "string",
									"description": "a reference to the underlying iniatitive for the artwork from which this item was created"
								},
								"address": {
									"type": "string",
									"description": "a reference to the address for this cart item"
								},
								"comments": {
									"type": "string",
									"description": "comments entered for this cart item"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/carts/{cart}/validate": {
			"get": {
				"summary": "Validates a given cart.",
				"description": "This endpoint validates supplied cart and returns invalid cartItem.",
				"operationId": "validateCart",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "cart",
					"description": "Use this path parameter to define the reference to a cart.",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Cart"],
				"responses": {
					"200": {
						"description": "Array of invalid cart items.",
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"description": "the name of the artwork for this cart item"
									},
									"thumbnail": {
										"type": "string",
										"description": "the url to the artwork thumbnail for this cart item"
									},
									"finalArtwork": {
										"type": "string",
										"description": "the url to the final artwork for this cart item"
									},
									"artworkType": {
										"type": "string",
										"description": "the type of artwork for this cart item"
									},
									"location": {
										"type": "string",
										"description": "the location for this cart item"
									},
									"fulfilment": {
										"type": "string",
										"description": "the fulfilment for this cart item"
									},
									"qty": {
										"type": "number",
										"description": "the quantity required"
									},
									"partner": {
										"type": "string",
										"description": "a reference to the underlying production partner for this cart item"
									},
									"artwork": {
										"type": "string",
										"description": "a reference to the underlying artwork from which this item was created"
									},
									"initiative": {
										"type": "string",
										"description": "a reference to the underlying iniatitive for the artwork from which this item was created"
									},
									"address": {
										"type": "string",
										"description": "a reference to the address for this cart item"
									},
									"comments": {
										"type": "string",
										"description": "comments entered for this cart item"
									}
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/carts/{cart}/items/{ref}": {
			"put": {
				"summary": "Modify a cart item by its reference.",
				"description": "This endpoint modifies the cart item identified by the supplied `ref`erence path parameter.\n",
				"operationId": "modifyCartItem",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "cart",
					"description": "Use this path parameter to define the reference to a cart.",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "item",
					"description": "The new cart item.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "the name of the artwork for this cart item"
							},
							"thumbnail": {
								"type": "string",
								"description": "the url to the artwork thumbnail for this cart item"
							},
							"finalArtwork": {
								"type": "string",
								"description": "the url to the final artwork for this cart item"
							},
							"artworkType": {
								"type": "string",
								"description": "the type of artwork for this cart item"
							},
							"location": {
								"type": "string",
								"description": "the location for this cart item"
							},
							"fulfilment": {
								"type": "string",
								"description": "the fulfilment for this cart item"
							},
							"qty": {
								"type": "number",
								"description": "the quantity required"
							},
							"partner": {
								"type": "string",
								"description": "a reference to the underlying production partner for this cart item"
							},
							"artwork": {
								"type": "string",
								"description": "a reference to the underlying artwork from which this item was created"
							},
							"initiative": {
								"type": "string",
								"description": "a reference to the underlying iniatitive for the artwork from which this item was created"
							},
							"address": {
								"type": "string",
								"description": "a reference to the address for this cart item"
							},
							"comments": {
								"type": "string",
								"description": "comments entered for this cart item"
							}
						}
					}
				}],
				"tags": ["Cart"],
				"responses": {
					"200": {
						"description": "The updated cart item.",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "the name of the artwork for this cart item"
								},
								"thumbnail": {
									"type": "string",
									"description": "the url to the artwork thumbnail for this cart item"
								},
								"finalArtwork": {
									"type": "string",
									"description": "the url to the final artwork for this cart item"
								},
								"artworkType": {
									"type": "string",
									"description": "the type of artwork for this cart item"
								},
								"location": {
									"type": "string",
									"description": "the location for this cart item"
								},
								"fulfilment": {
									"type": "string",
									"description": "the fulfilment for this cart item"
								},
								"qty": {
									"type": "number",
									"description": "the quantity required"
								},
								"partner": {
									"type": "string",
									"description": "a reference to the underlying production partner for this cart item"
								},
								"artwork": {
									"type": "string",
									"description": "a reference to the underlying artwork from which this item was created"
								},
								"initiative": {
									"type": "string",
									"description": "a reference to the underlying iniatitive for the artwork from which this item was created"
								},
								"address": {
									"type": "string",
									"description": "a reference to the address for this cart item"
								},
								"comments": {
									"type": "string",
									"description": "comments entered for this cart item"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a cart item by its reference.",
				"description": "This endpoint deletes the a cart item identified by the supplied `ref`erence path parameter.\n",
				"operationId": "deleteCartItem",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "cart",
					"description": "Use this path parameter to define the reference to a cart.",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Cart"],
				"responses": {
					"204": {
						"description": "Deleted the cart item."
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/comments/{ref}": {
			"get": {
				"summary": "Retrieve a comment thread by its reference.",
				"description": "This endpoint returns the comment thread identified by the supplied `ref`erence path parameter.\n",
				"operationId": "getComments",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Comment"],
				"responses": {
					"200": {
						"description": "The comment thread.",
						"schema": {
							"type": "object",
							"properties": {
								"comments": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"text": {
												"type": "string",
												"description": "The content of the comment"
											},
											"meta": {
												"type": "object",
												"description": "Extra metadata associated with this comment"
											}
										}
									}
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/comments/{thread}/create": {
			"post": {
				"summary": "Create a new comment in this thread",
				"description": "This endpoint enables clients to post comments to threads by reference",
				"operationId": "createComment",
				"security": [{
					"token": []
				}],
				"tags": ["Comment"],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "thread",
					"description": "Use this path parameter to define the reference to a comment thread.",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "comment",
					"description": "The comment to be posted",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"text": {
								"type": "string",
								"description": "The content of the comment"
							},
							"meta": {
								"type": "object",
								"description": "Extra metadata associated with this comment"
							}
						}
					}
				}],
				"responses": {
					"201": {
						"description": "The new comment",
						"schema": {
							"type": "object",
							"properties": {
								"text": {
									"type": "string",
									"description": "The content of the comment"
								},
								"meta": {
									"type": "object",
									"description": "Extra metadata associated with this comment"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/comments/{thread}/items/{ref}": {
			"delete": {
				"summary": "Delete a comment in this thread",
				"description": "This endpoint enables clients to post comments to threads by reference",
				"operationId": "deleteComment",
				"security": [{
					"token": []
				}],
				"tags": ["Comment"],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "thread",
					"description": "Use this path parameter to define the reference to a comment thread.",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"204": {
						"description": "Deleted the comment."
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/contents/{ref}": {
			"get": {
				"summary": "Retrieve a content item by its reference.",
				"description": "This endpoint returns the content item identified by the supplied `ref`erence path parameter.\n",
				"operationId": "getContent",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Initiative"],
				"responses": {
					"200": {
						"description": "The content item.",
						"schema": {
							"type": "object",
							"required": ["name"],
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the initiative."
								},
								"description": {
									"type": "string",
									"description": "The description of the initiative."
								},
								"start": {
									"type": "string",
									"format": "date-time",
									"description": "The start date of the initiative."
								},
								"end": {
									"type": "string",
									"format": "date-time",
									"description": "The end date of the initiative."
								},
								"active": {
									"type": "boolean",
									"description": "The active flag of this initiative."
								},
								"activatedAt": {
									"type": "string",
									"format": "date-time",
									"description": "The activation date of the initiative."
								},
								"metadata": {
									"type": "array",
									"description": "A list of metadata references associated to the initiative.",
									"default": [],
									"items": {
										"type": "string"
									}
								},
								"properties": {
									"type": "object",
									"description": "A application specific properties collection.",
									"default": {
										
									}
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/initiatives": {
			"get": {
				"summary": "Retrieve all initiative items.",
				"description": "This endpoint returns all initiatives controlled by the **Elateral** api.\n",
				"operationId": "getInitiatives",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "query",
					"description": "Filters the results based on the supplied criteria e.g. `?query={\"name\":\"Bob\"}\nto filter the results to those documents with a name property of __Bob__\n",
					"in": "query",
					"type": "string",
					"default": "{}"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Initiative"],
				"responses": {
					"200": {
						"description": "All initiative items.",
						"schema": {
							"allOf": [{
								"allOf": [{
									"type": "object",
									"properties": {
										"count": {
											"type": "number"
										}
									}
								},
								{
									"properties": {
										"results": {
											"type": "array",
											"items": {
												"type": "object",
												"required": ["name"],
												"properties": {
													"name": {
														"type": "string",
														"description": "The name of the initiative."
													},
													"description": {
														"type": "string",
														"description": "The description of the initiative."
													},
													"start": {
														"type": "string",
														"format": "date-time",
														"description": "The start date of the initiative."
													},
													"end": {
														"type": "string",
														"format": "date-time",
														"description": "The end date of the initiative."
													},
													"active": {
														"type": "boolean",
														"description": "The active flag of this initiative."
													},
													"activatedAt": {
														"type": "string",
														"format": "date-time",
														"description": "The activation date of the initiative."
													},
													"metadata": {
														"type": "array",
														"description": "A list of metadata references associated to the initiative.",
														"default": [],
														"items": {
															"type": "string"
														}
													},
													"properties": {
														"type": "object",
														"description": "A application specific properties collection.",
														"default": {
															
														}
													}
												}
											}
										}
									}
								}]
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create an initiative.",
				"description": "This endpoint enables clients to create an initiative.\n",
				"operationId": "createInitiative",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "initiative",
					"description": "The new initiatives details.",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"required": ["name"],
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the initiative."
								},
								"description": {
									"type": "string",
									"description": "The description of the initiative."
								},
								"start": {
									"type": "string",
									"format": "date-time",
									"description": "The start date of the initiative."
								},
								"end": {
									"type": "string",
									"format": "date-time",
									"description": "The end date of the initiative."
								},
								"active": {
									"type": "boolean",
									"description": "The active flag of this initiative."
								},
								"activatedAt": {
									"type": "string",
									"format": "date-time",
									"description": "The activation date of the initiative."
								},
								"metadata": {
									"type": "array",
									"description": "A list of metadata references associated to the initiative.",
									"default": [],
									"items": {
										"type": "string"
									}
								},
								"properties": {
									"type": "object",
									"description": "A application specific properties collection.",
									"default": {
										
									}
								}
							}
						},
						{
							"properties": {
								"briefUrl": {
									"type": "string",
									"description": "URL to the Brief.",
									"example": "https://briefs.elateral.io/brief/abc123.html"
								},
								"group": {
									"type": "string",
									"description": "Type of the initiative"
								}
							}
						}]
					}
				}],
				"tags": ["Initiative"],
				"responses": {
					"201": {
						"description": "The new initiative.",
						"schema": {
							"allOf": [{
								"type": "object",
								"required": ["name"],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the initiative."
									},
									"description": {
										"type": "string",
										"description": "The description of the initiative."
									},
									"start": {
										"type": "string",
										"format": "date-time",
										"description": "The start date of the initiative."
									},
									"end": {
										"type": "string",
										"format": "date-time",
										"description": "The end date of the initiative."
									},
									"active": {
										"type": "boolean",
										"description": "The active flag of this initiative."
									},
									"activatedAt": {
										"type": "string",
										"format": "date-time",
										"description": "The activation date of the initiative."
									},
									"metadata": {
										"type": "array",
										"description": "A list of metadata references associated to the initiative.",
										"default": [],
										"items": {
											"type": "string"
										}
									},
									"properties": {
										"type": "object",
										"description": "A application specific properties collection.",
										"default": {
											
										}
									}
								}
							},
							{
								"properties": {
									"briefUrl": {
										"type": "string",
										"description": "URL to the Brief.",
										"example": "https://briefs.elateral.io/brief/abc123.html"
									},
									"group": {
										"type": "string",
										"description": "Type of the initiative"
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/initiatives/{ref}": {
			"get": {
				"summary": "Retrieve an initiativeby its reference.",
				"description": "This endpoint returns the initiative identified by the supplied `ref`erence path parameter.\n",
				"operationId": "getInitiative",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Initiative"],
				"responses": {
					"200": {
						"description": "The initiative item.",
						"schema": {
							"allOf": [{
								"type": "object",
								"required": ["name"],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the initiative."
									},
									"description": {
										"type": "string",
										"description": "The description of the initiative."
									},
									"start": {
										"type": "string",
										"format": "date-time",
										"description": "The start date of the initiative."
									},
									"end": {
										"type": "string",
										"format": "date-time",
										"description": "The end date of the initiative."
									},
									"active": {
										"type": "boolean",
										"description": "The active flag of this initiative."
									},
									"activatedAt": {
										"type": "string",
										"format": "date-time",
										"description": "The activation date of the initiative."
									},
									"metadata": {
										"type": "array",
										"description": "A list of metadata references associated to the initiative.",
										"default": [],
										"items": {
											"type": "string"
										}
									},
									"properties": {
										"type": "object",
										"description": "A application specific properties collection.",
										"default": {
											
										}
									}
								}
							},
							{
								"properties": {
									"briefUrl": {
										"type": "string",
										"description": "URL to the Brief.",
										"example": "https://briefs.elateral.io/brief/abc123.html"
									},
									"group": {
										"type": "string",
										"description": "Type of the initiative"
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Modify an initiative item by its reference.",
				"description": "This endpoint modifies the initiative identified by the supplied `ref`erence path parameter.\n",
				"operationId": "modifyInitiative",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "initiative",
					"description": "The modified initiatives details.",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"required": ["name"],
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the initiative."
								},
								"description": {
									"type": "string",
									"description": "The description of the initiative."
								},
								"start": {
									"type": "string",
									"format": "date-time",
									"description": "The start date of the initiative."
								},
								"end": {
									"type": "string",
									"format": "date-time",
									"description": "The end date of the initiative."
								},
								"active": {
									"type": "boolean",
									"description": "The active flag of this initiative."
								},
								"activatedAt": {
									"type": "string",
									"format": "date-time",
									"description": "The activation date of the initiative."
								},
								"metadata": {
									"type": "array",
									"description": "A list of metadata references associated to the initiative.",
									"default": [],
									"items": {
										"type": "string"
									}
								},
								"properties": {
									"type": "object",
									"description": "A application specific properties collection.",
									"default": {
										
									}
								}
							}
						},
						{
							"properties": {
								"briefUrl": {
									"type": "string",
									"description": "URL to the Brief.",
									"example": "https://briefs.elateral.io/brief/abc123.html"
								},
								"group": {
									"type": "string",
									"description": "Type of the initiative"
								}
							}
						}]
					}
				}],
				"tags": ["Initiative"],
				"responses": {
					"200": {
						"description": "The updated initiative.",
						"schema": {
							"allOf": [{
								"type": "object",
								"required": ["name"],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the initiative."
									},
									"description": {
										"type": "string",
										"description": "The description of the initiative."
									},
									"start": {
										"type": "string",
										"format": "date-time",
										"description": "The start date of the initiative."
									},
									"end": {
										"type": "string",
										"format": "date-time",
										"description": "The end date of the initiative."
									},
									"active": {
										"type": "boolean",
										"description": "The active flag of this initiative."
									},
									"activatedAt": {
										"type": "string",
										"format": "date-time",
										"description": "The activation date of the initiative."
									},
									"metadata": {
										"type": "array",
										"description": "A list of metadata references associated to the initiative.",
										"default": [],
										"items": {
											"type": "string"
										}
									},
									"properties": {
										"type": "object",
										"description": "A application specific properties collection.",
										"default": {
											
										}
									}
								}
							},
							{
								"properties": {
									"briefUrl": {
										"type": "string",
										"description": "URL to the Brief.",
										"example": "https://briefs.elateral.io/brief/abc123.html"
									},
									"group": {
										"type": "string",
										"description": "Type of the initiative"
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an initiative by its reference.",
				"description": "This endpoint deletes the initiative item identified by the supplied `ref`erence path parameter.\n",
				"operationId": "deleteInitiative",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Initiative"],
				"responses": {
					"204": {
						"description": "Deleted the initiative."
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/initiatives/{ref}/briefconfig": {
			"get": {
				"summary": "Retrieve an initiativeby its reference.",
				"description": "This endpoint returns the an excel file containing the latest brief config.\n",
				"operationId": "getBriefConfig",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Initiative"],
				"responses": {
					"200": {
						"description": "The exported brief config.",
						"schema": {
							"type": "file"
						}
					},
					"404": {
						"description": "Not found",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/metadata": {
			"get": {
				"summary": "Retrieve all metadata items.",
				"description": "This endpoint returns all metadata controlled by the **Elateral** api.\n",
				"operationId": "getMetadataItems",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "query",
					"description": "Filters the results based on the supplied criteria e.g. `?query={\"name\":\"Bob\"}\nto filter the results to those documents with a name property of __Bob__\n",
					"in": "query",
					"type": "string",
					"default": "{}"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "depth",
					"description": "Use this parameter to retrict the depth of the metadata tree.\n",
					"in": "query",
					"type": "number"
				}],
				"tags": ["Metadata"],
				"responses": {
					"200": {
						"description": "All metadata items.",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"count": {
										"type": "number"
									}
								}
							},
							{
								"properties": {
									"results": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"name": {
													"type": "string",
													"description": "The name of the metadata item."
												},
												"parent": {
													"type": "string",
													"description": "The document reference of the filesystems items parent."
												}
											}
										}
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a metadata item.",
				"description": "This endpoint enables clients to create a metadata item.\n",
				"operationId": "createMetadataItem",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "metadata",
					"description": "The new metadata items details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "The name of the metadata item."
							},
							"parent": {
								"type": "string",
								"description": "The document reference of the filesystems items parent."
							}
						}
					}
				}],
				"tags": ["Metadata"],
				"responses": {
					"201": {
						"description": "The new metadata item.",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the metadata item."
								},
								"parent": {
									"type": "string",
									"description": "The document reference of the filesystems items parent."
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/metadata/{ref}": {
			"get": {
				"summary": "Retrieve a metadata item by its reference.",
				"description": "This endpoint returns the metadata item identified by the supplied `ref`erence path parameter.\n",
				"operationId": "getMetadataItem",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Metadata"],
				"responses": {
					"200": {
						"description": "The metadata item.",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the metadata item."
								},
								"parent": {
									"type": "string",
									"description": "The document reference of the filesystems items parent."
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Modify a metadata item by its reference.",
				"description": "This endpoint modifies the metadata item identified by the supplied `ref`erence path parameter.\n",
				"operationId": "modifyMetadataItem",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "metadata",
					"description": "The modified metadata items details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "The name of the metadata item."
							},
							"parent": {
								"type": "string",
								"description": "The document reference of the filesystems items parent."
							}
						}
					}
				}],
				"tags": ["Metadata"],
				"responses": {
					"200": {
						"description": "The updated metadata.",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "The name of the metadata item."
								},
								"parent": {
									"type": "string",
									"description": "The document reference of the filesystems items parent."
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a metadata item by its reference.",
				"description": "This endpoint deletes the metadata item identified by the supplied `ref`erence path parameter.\n",
				"operationId": "deleteMetadataItem",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Metadata"],
				"responses": {
					"204": {
						"description": "Deleted the metadata item."
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/oauth/token": {
			"post": {
				"summary": "Create a oauth bearer authentication token.",
				"description": "The Token endpoint returns an authentication token which can be used in subsequent calls to the\n**Elateral** api. Use this endpoint to retrieve a token and then supply it as a _Authorization_ header in\nthe format **Bearer {token}** in all other api requests.\n",
				"consumes": ["application/x-www-form-urlencoded"],
				"operationId": "getOAuthToken",
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "credentials",
					"description": "Users credentials.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["grant_type"],
						"properties": {
							"username": {
								"type": "string",
								"description": "The users username."
							},
							"password": {
								"type": "string",
								"description": "The users password."
							},
							"refresh_token": {
								"type": "string",
								"description": "The refresh token from a previous oauth request."
							},
							"grant_type": {
								"type": "string",
								"description": "The grant type for this authentication request."
							}
						}
					}
				}],
				"tags": ["Security"],
				"responses": {
					"200": {
						"description": "The authentication token response.",
						"schema": {
							"type": "object",
							"required": ["access_token"],
							"properties": {
								"access_token": {
									"type": "string",
									"description": "A valid authorization token."
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/orders": {
			"get": {
				"summary": "Retrieve the orders for the supplied user.",
				"description": "This endpoint returns all orders.\n",
				"operationId": "getOrders",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "query",
					"description": "Filters the results based on the supplied criteria e.g. `?query={\"name\":\"Bob\"}\nto filter the results to those documents with a name property of __Bob__\n",
					"in": "query",
					"type": "string",
					"default": "{}"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Order"],
				"responses": {
					"200": {
						"description": "All orders.",
						"schema": {
							"type": "object",
							"properties": {
								"items": {
									"type": "array",
									"description": "The order lines.",
									"items": {
										"type": "object"
									}
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create an order.",
				"description": "This endpoint enables clients to create an order.\n",
				"operationId": "createOrder",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "cart",
					"description": "The cart from which to create the order.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["cart"],
						"properties": {
							"cart": {
								"type": "string",
								"description": "A reference to a cart document."
							}
						}
					}
				}],
				"tags": ["Order"],
				"responses": {
					"201": {
						"description": "The new order.",
						"schema": {
							"type": "object",
							"properties": {
								"items": {
									"type": "array",
									"description": "The order lines.",
									"items": {
										"type": "object"
									}
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/orders/{ref}": {
			"get": {
				"summary": "Retrieve an order by its reference.",
				"description": "This endpoint returns the order identified by its reference.\n",
				"operationId": "getOrder",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Order"],
				"responses": {
					"200": {
						"description": "The order item.",
						"schema": {
							"type": "object",
							"properties": {
								"items": {
									"type": "array",
									"description": "The order lines.",
									"items": {
										"type": "object"
									}
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/orders/{ref}/retry": {
			"post": {
				"summary": "Retrieve an order's status by it's order reference.",
				"description": "This endpoint returns the jobs associated with the order reference and their status\n",
				"operationId": "retryOrderJob",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "job",
					"description": "The job to retry",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["ref"],
						"properties": {
							"ref": {
								"type": "string",
								"description": "The `ref` of the associated document."
							}
						}
					}
				}],
				"tags": ["Order"],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "object",
							"properties": {
								"items": {
									"type": "array",
									"description": "The order lines.",
									"items": {
										"type": "object"
									}
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/partners": {
			"get": {
				"summary": "Retrieve the partners for the supplied user.",
				"description": "This endpoint returns all partners.",
				"operationId": "getPartners",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "query",
					"description": "Filters the results based on the supplied criteria e.g. `?query={\"name\":\"Bob\"}\nto filter the results to those documents with a name property of __Bob__\n",
					"in": "query",
					"type": "string",
					"default": "{}"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Partner"],
				"responses": {
					"200": {
						"description": "All partners.",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "the name of the partner"
								},
								"sftp": {
									"type": "object",
									"properties": {
										"uri": {
											"type": "string",
											"description": "the full uri of the partners sftp"
										},
										"private_key": {
											"type": "string",
											"description": "the value of the private key for the partners sftp"
										}
									}
								},
								"contacts": {
									"type": "array",
									"description": "contacts associated with this partner",
									"items": {
										"type": "object",
										"properties": {
											"firstname": {
												"type": "string",
												"description": "firstname of the contact"
											},
											"surname": {
												"type": "string",
												"description": "surname of the contact"
											},
											"email": {
												"type": "string",
												"description": "email of the contact"
											}
										}
									}
								},
								"location": {
									"type": "array",
									"description": "locations associated with this partner",
									"items": {
										"type": "string",
										"description": "single location"
									}
								},
								"region": {
									"type": "string",
									"description": "the region for this partner"
								},
								"order": {
									"type": "object",
									"properties": {
										"requireQuantity": {
											"type": "boolean",
											"description": "true if this partner requires quantity to be sent with order, otherwise false.",
											"example": false
										},
										"requireDeliveryAddress": {
											"type": "boolean",
											"description": "true if this partner requires delivery address to be sent with order, otherwise false.",
											"example": false
										}
									}
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a partner.",
				"description": "This endpoint enables clients to create a partner.",
				"operationId": "createPartner",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "partner",
					"description": "The partner object",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "the name of the partner"
							},
							"sftp": {
								"type": "object",
								"properties": {
									"uri": {
										"type": "string",
										"description": "the full uri of the partners sftp"
									},
									"private_key": {
										"type": "string",
										"description": "the value of the private key for the partners sftp"
									}
								}
							},
							"contacts": {
								"type": "array",
								"description": "contacts associated with this partner",
								"items": {
									"type": "object",
									"properties": {
										"firstname": {
											"type": "string",
											"description": "firstname of the contact"
										},
										"surname": {
											"type": "string",
											"description": "surname of the contact"
										},
										"email": {
											"type": "string",
											"description": "email of the contact"
										}
									}
								}
							},
							"location": {
								"type": "array",
								"description": "locations associated with this partner",
								"items": {
									"type": "string",
									"description": "single location"
								}
							},
							"region": {
								"type": "string",
								"description": "the region for this partner"
							},
							"order": {
								"type": "object",
								"properties": {
									"requireQuantity": {
										"type": "boolean",
										"description": "true if this partner requires quantity to be sent with order, otherwise false.",
										"example": false
									},
									"requireDeliveryAddress": {
										"type": "boolean",
										"description": "true if this partner requires delivery address to be sent with order, otherwise false.",
										"example": false
									}
								}
							}
						}
					}
				}],
				"tags": ["Partner"],
				"responses": {
					"201": {
						"description": "The new partner.",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "the name of the partner"
								},
								"sftp": {
									"type": "object",
									"properties": {
										"uri": {
											"type": "string",
											"description": "the full uri of the partners sftp"
										},
										"private_key": {
											"type": "string",
											"description": "the value of the private key for the partners sftp"
										}
									}
								},
								"contacts": {
									"type": "array",
									"description": "contacts associated with this partner",
									"items": {
										"type": "object",
										"properties": {
											"firstname": {
												"type": "string",
												"description": "firstname of the contact"
											},
											"surname": {
												"type": "string",
												"description": "surname of the contact"
											},
											"email": {
												"type": "string",
												"description": "email of the contact"
											}
										}
									}
								},
								"location": {
									"type": "array",
									"description": "locations associated with this partner",
									"items": {
										"type": "string",
										"description": "single location"
									}
								},
								"region": {
									"type": "string",
									"description": "the region for this partner"
								},
								"order": {
									"type": "object",
									"properties": {
										"requireQuantity": {
											"type": "boolean",
											"description": "true if this partner requires quantity to be sent with order, otherwise false.",
											"example": false
										},
										"requireDeliveryAddress": {
											"type": "boolean",
											"description": "true if this partner requires delivery address to be sent with order, otherwise false.",
											"example": false
										}
									}
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/partners/{ref}": {
			"get": {
				"summary": "Retrieve a partner by its reference.",
				"description": "This endpoint returns the partner identified by its reference.\n",
				"operationId": "getPartners",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Partner"],
				"responses": {
					"200": {
						"description": "The partner item.",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "the name of the partner"
								},
								"sftp": {
									"type": "object",
									"properties": {
										"uri": {
											"type": "string",
											"description": "the full uri of the partners sftp"
										},
										"private_key": {
											"type": "string",
											"description": "the value of the private key for the partners sftp"
										}
									}
								},
								"contacts": {
									"type": "array",
									"description": "contacts associated with this partner",
									"items": {
										"type": "object",
										"properties": {
											"firstname": {
												"type": "string",
												"description": "firstname of the contact"
											},
											"surname": {
												"type": "string",
												"description": "surname of the contact"
											},
											"email": {
												"type": "string",
												"description": "email of the contact"
											}
										}
									}
								},
								"location": {
									"type": "array",
									"description": "locations associated with this partner",
									"items": {
										"type": "string",
										"description": "single location"
									}
								},
								"region": {
									"type": "string",
									"description": "the region for this partner"
								},
								"order": {
									"type": "object",
									"properties": {
										"requireQuantity": {
											"type": "boolean",
											"description": "true if this partner requires quantity to be sent with order, otherwise false.",
											"example": false
										},
										"requireDeliveryAddress": {
											"type": "boolean",
											"description": "true if this partner requires delivery address to be sent with order, otherwise false.",
											"example": false
										}
									}
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Modify a partner by its reference.",
				"description": "This endpoint modifies the partner identified by the supplied `ref`erence path parameter.\n",
				"operationId": "modifyPartner",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "partner",
					"description": "The modified partner's details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "the name of the partner"
							},
							"sftp": {
								"type": "object",
								"properties": {
									"uri": {
										"type": "string",
										"description": "the full uri of the partners sftp"
									},
									"private_key": {
										"type": "string",
										"description": "the value of the private key for the partners sftp"
									}
								}
							},
							"contacts": {
								"type": "array",
								"description": "contacts associated with this partner",
								"items": {
									"type": "object",
									"properties": {
										"firstname": {
											"type": "string",
											"description": "firstname of the contact"
										},
										"surname": {
											"type": "string",
											"description": "surname of the contact"
										},
										"email": {
											"type": "string",
											"description": "email of the contact"
										}
									}
								}
							},
							"location": {
								"type": "array",
								"description": "locations associated with this partner",
								"items": {
									"type": "string",
									"description": "single location"
								}
							},
							"region": {
								"type": "string",
								"description": "the region for this partner"
							},
							"order": {
								"type": "object",
								"properties": {
									"requireQuantity": {
										"type": "boolean",
										"description": "true if this partner requires quantity to be sent with order, otherwise false.",
										"example": false
									},
									"requireDeliveryAddress": {
										"type": "boolean",
										"description": "true if this partner requires delivery address to be sent with order, otherwise false.",
										"example": false
									}
								}
							}
						}
					}
				}],
				"tags": ["Partner"],
				"responses": {
					"200": {
						"description": "The updated partner.",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "the name of the partner"
								},
								"sftp": {
									"type": "object",
									"properties": {
										"uri": {
											"type": "string",
											"description": "the full uri of the partners sftp"
										},
										"private_key": {
											"type": "string",
											"description": "the value of the private key for the partners sftp"
										}
									}
								},
								"contacts": {
									"type": "array",
									"description": "contacts associated with this partner",
									"items": {
										"type": "object",
										"properties": {
											"firstname": {
												"type": "string",
												"description": "firstname of the contact"
											},
											"surname": {
												"type": "string",
												"description": "surname of the contact"
											},
											"email": {
												"type": "string",
												"description": "email of the contact"
											}
										}
									}
								},
								"location": {
									"type": "array",
									"description": "locations associated with this partner",
									"items": {
										"type": "string",
										"description": "single location"
									}
								},
								"region": {
									"type": "string",
									"description": "the region for this partner"
								},
								"order": {
									"type": "object",
									"properties": {
										"requireQuantity": {
											"type": "boolean",
											"description": "true if this partner requires quantity to be sent with order, otherwise false.",
											"example": false
										},
										"requireDeliveryAddress": {
											"type": "boolean",
											"description": "true if this partner requires delivery address to be sent with order, otherwise false.",
											"example": false
										}
									}
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a partner by its reference.",
				"description": "This endpoint deletes the partner identified by its reference.\n",
				"operationId": "deletePartner",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Partner"],
				"responses": {
					"204": {
						"description": "Deleted the partner."
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/resources": {
			"get": {
				"summary": "Retrieve all resources.",
				"description": "This endpoint returns all resources controlled by the **Elateral** api.\n",
				"operationId": "getResources",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "query",
					"description": "Filters the results based on the supplied criteria e.g. `?query={\"name\":\"Bob\"}\nto filter the results to those documents with a name property of __Bob__\n",
					"in": "query",
					"type": "string",
					"default": "{}"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Resource"],
				"responses": {
					"200": {
						"description": "All resources.",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"count": {
										"type": "number"
									}
								}
							},
							{
								"properties": {
									"results": {
										"type": "array",
										"items": {
											"type": "object",
											"required": ["filename"],
											"properties": {
												"mimeType": {
													"type": "string",
													"description": "The content type of the uploaded file."
												},
												"filename": {
													"type": "string",
													"description": "The filesystem name when the resource was uploaded.",
													"maxLength": 256
												},
												"uri": {
													"type": "string",
													"description": "The uri of the file once uploaded."
												}
											}
										}
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a resource via a multipart form file upload.",
				"description": "This endpoint enables clients to create a resource via a file upload.\n",
				"consumes": ["multipart/form-data"],
				"operationId": "createResource",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "file",
					"in": "formData",
					"description": "The contents of the resource",
					"required": true,
					"type": "file",
					"maxLength": 1073741824
				}],
				"tags": ["Resource"],
				"responses": {
					"201": {
						"description": "The new resource.",
						"schema": {
							"type": "object",
							"required": ["filename"],
							"properties": {
								"mimeType": {
									"type": "string",
									"description": "The content type of the uploaded file."
								},
								"filename": {
									"type": "string",
									"description": "The filesystem name when the resource was uploaded.",
									"maxLength": 256
								},
								"uri": {
									"type": "string",
									"description": "The uri of the file once uploaded."
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/resources/{ref}": {
			"get": {
				"summary": "Retrieve a resource by its reference.",
				"description": "This endpoint returns the resource identified by the supplied `ref`erence path parameter.\n",
				"operationId": "getResource",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Resource"],
				"responses": {
					"200": {
						"description": "The group.",
						"schema": {
							"type": "object",
							"required": ["filename"],
							"properties": {
								"mimeType": {
									"type": "string",
									"description": "The content type of the uploaded file."
								},
								"filename": {
									"type": "string",
									"description": "The filesystem name when the resource was uploaded.",
									"maxLength": 256
								},
								"uri": {
									"type": "string",
									"description": "The uri of the file once uploaded."
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Modify a resource via a multipart form file upload.",
				"description": "This endpoint modifies the resource identified by the supplied `ref`erence path parameter.\n",
				"operationId": "modifyResource",
				"security": [{
					"token": []
				}],
				"consumes": ["multipart/form-data"],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "file",
					"in": "formData",
					"description": "The contents of the resource",
					"required": true,
					"type": "file",
					"maximum": 1,
					"minLength": 1,
					"maxLength": 1073741824
				}],
				"tags": ["Resource"],
				"responses": {
					"201": {
						"description": "The new resource.",
						"schema": {
							"type": "object",
							"required": ["filename"],
							"properties": {
								"mimeType": {
									"type": "string",
									"description": "The content type of the uploaded file."
								},
								"filename": {
									"type": "string",
									"description": "The filesystem name when the resource was uploaded.",
									"maxLength": 256
								},
								"uri": {
									"type": "string",
									"description": "The uri of the file once uploaded."
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a resource by its reference.",
				"description": "This endpoint deletes the resource identified by the supplied `ref`erence path parameter.\n",
				"operationId": "deleteResource",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Resource"],
				"responses": {
					"204": {
						"description": "Deleted the resource."
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/resources/upload/signature": {
			"get": {
				"summary": "Get the signature for storing the chunk",
				"description": "This endpoint provides a temporary shared access signature to be used for storing data\n",
				"operationId": "getUploadSignature",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "bloburi",
					"description": "Use this parameter to provide the bloburi that you require a signature for\n",
					"in": "query",
					"required": true,
					"type": "string"
				},
				{
					"name": "_method",
					"description": "The method being performed\n",
					"in": "query",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "The signature"
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": ["Resource"]
			}
		},
		"/resources/upload/done": {
			"post": {
				"summary": "State that the upload is completed and here are the details for creating the new resource",
				"description": "This endpoint accepts data saying that the new file has been uploaded\n",
				"operationId": "postUploadDone",
				"security": [{
					"token": []
				}],
				"consumes": ["application/x-www-form-urlencoded"],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "blobDetails",
					"description": "The new brief details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["blob",
						"uuid",
						"name"],
						"properties": {
							"blob": {
								"type": "string",
								"description": "Name of the stored blob"
							},
							"uuid": {
								"type": "string",
								"description": "UUID of the blob"
							},
							"name": {
								"type": "string",
								"description": "Original file name of the file uploaded"
							},
							"container": {
								"type": "string",
								"description": "URI of the container that stores the blob"
							}
						}
					}
				}],
				"tags": ["Resource"],
				"responses": {
					"201": {
						"description": "The new resource.",
						"schema": {
							"type": "object",
							"required": ["filename"],
							"properties": {
								"mimeType": {
									"type": "string",
									"description": "The content type of the uploaded file."
								},
								"filename": {
									"type": "string",
									"description": "The filesystem name when the resource was uploaded.",
									"maxLength": 256
								},
								"uri": {
									"type": "string",
									"description": "The uri of the file once uploaded."
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/roles": {
			"get": {
				"summary": "Retrieve all roles.",
				"description": "This endpoint returns all roles controlled by the **Elateral** api.\n",
				"operationId": "getRoles",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "query",
					"description": "Filters the results based on the supplied criteria e.g. `?query={\"name\":\"Bob\"}\nto filter the results to those documents with a name property of __Bob__\n",
					"in": "query",
					"type": "string",
					"default": "{}"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Role"],
				"responses": {
					"200": {
						"description": "All roles.",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"count": {
										"type": "number"
									}
								}
							},
							{
								"properties": {
									"results": {
										"type": "array",
										"items": {
											"type": "object",
											"required": ["name"],
											"properties": {
												"name": {
													"type": "string",
													"description": "The roles name."
												},
												"permissions": {
													"type": "object",
													"properties": {
														"app": {
															"type": "array",
															"description": "A collection of application permissions.",
															"items": {
																"type": "object",
																"properties": {
																	"name": {
																		"type": "string",
																		"description": "The name of the `app` permission."
																	},
																	"values": {
																		"type": "array",
																		"description": "A collection of permissions values.",
																		"items": {
																			"type": "string"
																		}
																	}
																}
															}
														},
														"content": {
															"type": "array",
															"description": "A list of metadata references.",
															"items": {
																"type": "string"
															}
														}
													}
												}
											}
										}
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a role",
				"description": "This endpoint enables clients to create a role.\n",
				"operationId": "createRole",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "role",
					"description": "The new roles details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["name"],
						"properties": {
							"name": {
								"type": "string",
								"description": "The roles name."
							},
							"permissions": {
								"type": "object",
								"properties": {
									"app": {
										"type": "array",
										"description": "A collection of application permissions.",
										"items": {
											"type": "object",
											"properties": {
												"name": {
													"type": "string",
													"description": "The name of the `app` permission."
												},
												"values": {
													"type": "array",
													"description": "A collection of permissions values.",
													"items": {
														"type": "string"
													}
												}
											}
										}
									},
									"content": {
										"type": "array",
										"description": "A list of metadata references.",
										"items": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}],
				"tags": ["Role"],
				"responses": {
					"201": {
						"description": "The new role.",
						"schema": {
							"type": "object",
							"required": ["name"],
							"properties": {
								"name": {
									"type": "string",
									"description": "The roles name."
								},
								"permissions": {
									"type": "object",
									"properties": {
										"app": {
											"type": "array",
											"description": "A collection of application permissions.",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string",
														"description": "The name of the `app` permission."
													},
													"values": {
														"type": "array",
														"description": "A collection of permissions values.",
														"items": {
															"type": "string"
														}
													}
												}
											}
										},
										"content": {
											"type": "array",
											"description": "A list of metadata references.",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/roles/{ref}": {
			"get": {
				"summary": "Retrieve a role by its reference.",
				"description": "This endpoint returns the role identified by the supplied `ref`erence path parameter.\n",
				"operationId": "getRole",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Role"],
				"responses": {
					"200": {
						"description": "The role.",
						"schema": {
							"type": "object",
							"required": ["name"],
							"properties": {
								"name": {
									"type": "string",
									"description": "The roles name."
								},
								"permissions": {
									"type": "object",
									"properties": {
										"app": {
											"type": "array",
											"description": "A collection of application permissions.",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string",
														"description": "The name of the `app` permission."
													},
													"values": {
														"type": "array",
														"description": "A collection of permissions values.",
														"items": {
															"type": "string"
														}
													}
												}
											}
										},
										"content": {
											"type": "array",
											"description": "A list of metadata references.",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Modify a role by its reference.",
				"description": "This endpoint modifies the role identified by the supplied `ref`erence path parameter.\n",
				"operationId": "modifyRole",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "role",
					"description": "The modified roles details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["name"],
						"properties": {
							"name": {
								"type": "string",
								"description": "The roles name."
							},
							"permissions": {
								"type": "object",
								"properties": {
									"app": {
										"type": "array",
										"description": "A collection of application permissions.",
										"items": {
											"type": "object",
											"properties": {
												"name": {
													"type": "string",
													"description": "The name of the `app` permission."
												},
												"values": {
													"type": "array",
													"description": "A collection of permissions values.",
													"items": {
														"type": "string"
													}
												}
											}
										}
									},
									"content": {
										"type": "array",
										"description": "A list of metadata references.",
										"items": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}],
				"tags": ["Role"],
				"responses": {
					"200": {
						"description": "The updated role.",
						"schema": {
							"type": "object",
							"required": ["name"],
							"properties": {
								"name": {
									"type": "string",
									"description": "The roles name."
								},
								"permissions": {
									"type": "object",
									"properties": {
										"app": {
											"type": "array",
											"description": "A collection of application permissions.",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string",
														"description": "The name of the `app` permission."
													},
													"values": {
														"type": "array",
														"description": "A collection of permissions values.",
														"items": {
															"type": "string"
														}
													}
												}
											}
										},
										"content": {
											"type": "array",
											"description": "A list of metadata references.",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a role by its reference.",
				"description": "This endpoint deletes the role identified by the supplied `ref`erence path parameter.\n",
				"operationId": "deleteRole",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Role"],
				"responses": {
					"204": {
						"description": "Deleted the role."
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/search/suggest": {
			"get": {
				"summary": "Retrieve all search suggestions.",
				"description": "This endpoint returns all search suggestions controlled by the **Elateral** api.\n",
				"operationId": "getSearchSuggestions",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "type",
					"description": "The suggestion type (currently only `initiative`).",
					"in": "query",
					"required": true,
					"type": "string"
				},
				{
					"name": "term",
					"description": "The suggestion term.",
					"in": "query",
					"required": true,
					"type": "string"
				}],
				"tags": ["Search"],
				"responses": {
					"200": {
						"description": "All search suggestions.",
						"schema": {
							"type": "object"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/search/query": {
			"get": {
				"summary": "Retrieve all search items.",
				"description": "This endpoint returns all search items controlled by the **Elateral** api.\n",
				"operationId": "getSearchItems",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "filter",
					"description": "A comma separated list of metadata item references to filter on.",
					"in": "query",
					"required": false,
					"type": "string"
				},
				{
					"name": "term",
					"description": "The suggestion term.",
					"in": "query",
					"required": false,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Search"],
				"responses": {
					"200": {
						"description": "All search items.",
						"schema": {
							"type": "object"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/search/browse": {
			"get": {
				"summary": "Retrieve all search items using the supplied browse `metadata`.",
				"description": "This endpoint returns all search items controlled by the **Elateral** api.\n",
				"operationId": "getBrowseItems",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "metadata",
					"description": "The browsed metadata.",
					"in": "query",
					"required": true,
					"type": "string"
				}],
				"tags": ["Search"],
				"responses": {
					"200": {
						"description": "All search items.",
						"schema": {
							"type": "object"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/search/_rebuild": {
			"get": {
				"summary": "Rebuild the search index based on the account of the supplied token.",
				"description": "Rebuild the search index based on the account of the supplied token.\n",
				"operationId": "rebuildIndex",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				}],
				"tags": ["Search"],
				"responses": {
					"200": {
						"description": "Message indicating if the rebuild was triggered or not.",
						"schema": {
							"type": "string"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/sso": {
			"get": {
				"summary": "Retrieve all SSO Entries for an account.",
				"description": "This endpoint returns all SSO Entries for the account the user is authenticated against.\n",
				"operationId": "getSso",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "query",
					"description": "Filters the results based on the supplied criteria e.g. `?query={\"name\":\"Bob\"}\nto filter the results to those documents with a name property of __Bob__\n",
					"in": "query",
					"type": "string",
					"default": "{}"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["Security"],
				"responses": {
					"200": {
						"description": "All SSO entries.",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"count": {
										"type": "number"
									}
								}
							},
							{
								"properties": {
									"results": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"displayName": {
													"type": "string",
													"description": "The display name of the SSO Entry."
												},
												"name": {
													"type": "string",
													"description": "The name of the SSO Entry (used as the SourceId parameter)."
												},
												"idpLoginUrl": {
													"type": "string",
													"description": "The Login URL of the Identify Provider"
												},
												"idpLogoutUrl": {
													"type": "string",
													"description": "The Logout URL of the Identify Provider"
												},
												"idpCert": {
													"type": "string",
													"description": "The Signing Certificate of the Identity Provider"
												},
												"spCert": {
													"type": "string",
													"description": "The Signing Certificate of the Service Provider"
												},
												"spPrivateKey": {
													"type": "string",
													"description": "The Private Key for the Servie Provider signing requests"
												},
												"createUserIfNotExist": {
													"type": "boolean",
													"description": "Should a user be created on login if it does not already exist"
												},
												"registerUrl": {
													"type": "string",
													"description": "Used to show registration page if user does not exist and\ncreateUserIfNotExist is false\n"
												}
											}
										}
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create an SSO Entry",
				"description": "This endpoint enables clients to create an SSO Entry.\n",
				"operationId": "createSso",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "SSO Entry",
					"description": "The new SSO Entry details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"displayName": {
								"type": "string",
								"description": "The display name of the SSO Entry."
							},
							"name": {
								"type": "string",
								"description": "The name of the SSO Entry (used as the SourceId parameter)."
							},
							"idpLoginUrl": {
								"type": "string",
								"description": "The Login URL of the Identify Provider"
							},
							"idpLogoutUrl": {
								"type": "string",
								"description": "The Logout URL of the Identify Provider"
							},
							"idpCert": {
								"type": "string",
								"description": "The Signing Certificate of the Identity Provider"
							},
							"spCert": {
								"type": "string",
								"description": "The Signing Certificate of the Service Provider"
							},
							"spPrivateKey": {
								"type": "string",
								"description": "The Private Key for the Servie Provider signing requests"
							},
							"createUserIfNotExist": {
								"type": "boolean",
								"description": "Should a user be created on login if it does not already exist"
							},
							"registerUrl": {
								"type": "string",
								"description": "Used to show registration page if user does not exist and\ncreateUserIfNotExist is false\n"
							}
						}
					}
				}],
				"tags": ["Security"],
				"responses": {
					"201": {
						"description": "The new SSO Entry.",
						"schema": {
							"type": "object",
							"properties": {
								"displayName": {
									"type": "string",
									"description": "The display name of the SSO Entry."
								},
								"name": {
									"type": "string",
									"description": "The name of the SSO Entry (used as the SourceId parameter)."
								},
								"idpLoginUrl": {
									"type": "string",
									"description": "The Login URL of the Identify Provider"
								},
								"idpLogoutUrl": {
									"type": "string",
									"description": "The Logout URL of the Identify Provider"
								},
								"idpCert": {
									"type": "string",
									"description": "The Signing Certificate of the Identity Provider"
								},
								"spCert": {
									"type": "string",
									"description": "The Signing Certificate of the Service Provider"
								},
								"spPrivateKey": {
									"type": "string",
									"description": "The Private Key for the Servie Provider signing requests"
								},
								"createUserIfNotExist": {
									"type": "boolean",
									"description": "Should a user be created on login if it does not already exist"
								},
								"registerUrl": {
									"type": "string",
									"description": "Used to show registration page if user does not exist and\ncreateUserIfNotExist is false\n"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/sso/{ref}": {
			"get": {
				"summary": "Retrieve an SSO Entry by its reference.",
				"description": "This endpoint returns the SSO Entry identified by the supplied `ref`erence path parameter.\n",
				"operationId": "getSso",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Security"],
				"responses": {
					"200": {
						"description": "The SSO Entry.",
						"schema": {
							"type": "object",
							"properties": {
								"displayName": {
									"type": "string",
									"description": "The display name of the SSO Entry."
								},
								"name": {
									"type": "string",
									"description": "The name of the SSO Entry (used as the SourceId parameter)."
								},
								"idpLoginUrl": {
									"type": "string",
									"description": "The Login URL of the Identify Provider"
								},
								"idpLogoutUrl": {
									"type": "string",
									"description": "The Logout URL of the Identify Provider"
								},
								"idpCert": {
									"type": "string",
									"description": "The Signing Certificate of the Identity Provider"
								},
								"spCert": {
									"type": "string",
									"description": "The Signing Certificate of the Service Provider"
								},
								"spPrivateKey": {
									"type": "string",
									"description": "The Private Key for the Servie Provider signing requests"
								},
								"createUserIfNotExist": {
									"type": "boolean",
									"description": "Should a user be created on login if it does not already exist"
								},
								"registerUrl": {
									"type": "string",
									"description": "Used to show registration page if user does not exist and\ncreateUserIfNotExist is false\n"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Modify an SSO Entry by its reference.",
				"description": "This endpoint modifies the SSO Entry identified by the supplied `ref`erence path parameter.\n",
				"operationId": "modifySso",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "SSO Entry",
					"description": "The modified SSO Entry details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"displayName": {
								"type": "string",
								"description": "The display name of the SSO Entry."
							},
							"name": {
								"type": "string",
								"description": "The name of the SSO Entry (used as the SourceId parameter)."
							},
							"idpLoginUrl": {
								"type": "string",
								"description": "The Login URL of the Identify Provider"
							},
							"idpLogoutUrl": {
								"type": "string",
								"description": "The Logout URL of the Identify Provider"
							},
							"idpCert": {
								"type": "string",
								"description": "The Signing Certificate of the Identity Provider"
							},
							"spCert": {
								"type": "string",
								"description": "The Signing Certificate of the Service Provider"
							},
							"spPrivateKey": {
								"type": "string",
								"description": "The Private Key for the Servie Provider signing requests"
							},
							"createUserIfNotExist": {
								"type": "boolean",
								"description": "Should a user be created on login if it does not already exist"
							},
							"registerUrl": {
								"type": "string",
								"description": "Used to show registration page if user does not exist and\ncreateUserIfNotExist is false\n"
							}
						}
					}
				}],
				"tags": ["Security"],
				"responses": {
					"200": {
						"description": "The updated SSO Entry.",
						"schema": {
							"type": "object",
							"properties": {
								"displayName": {
									"type": "string",
									"description": "The display name of the SSO Entry."
								},
								"name": {
									"type": "string",
									"description": "The name of the SSO Entry (used as the SourceId parameter)."
								},
								"idpLoginUrl": {
									"type": "string",
									"description": "The Login URL of the Identify Provider"
								},
								"idpLogoutUrl": {
									"type": "string",
									"description": "The Logout URL of the Identify Provider"
								},
								"idpCert": {
									"type": "string",
									"description": "The Signing Certificate of the Identity Provider"
								},
								"spCert": {
									"type": "string",
									"description": "The Signing Certificate of the Service Provider"
								},
								"spPrivateKey": {
									"type": "string",
									"description": "The Private Key for the Servie Provider signing requests"
								},
								"createUserIfNotExist": {
									"type": "boolean",
									"description": "Should a user be created on login if it does not already exist"
								},
								"registerUrl": {
									"type": "string",
									"description": "Used to show registration page if user does not exist and\ncreateUserIfNotExist is false\n"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an SSO Entry by its reference.",
				"description": "This endpoint deletes the SSO Entry identified by the supplied `ref`erence path parameter.\n",
				"operationId": "deleteSso",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Security"],
				"responses": {
					"204": {
						"description": "Deleted the SSO Entry."
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/ssoPublicInfo/{ref}": {
			"get": {
				"summary": "Retrieve an SSO RegisterUrl by its ORIGIN HTTP header.",
				"description": "This endpoint returns the SSO Public information identified by the supplied ORIGIN HTTP header.\n",
				"operationId": "getSsoPublicByRef",
				"parameters": [{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["Security"],
				"responses": {
					"200": {
						"description": "The SSO Public information.",
						"schema": {
							"type": "object",
							"properties": {
								"displayName": {
									"type": "string",
									"description": "The display name of the SSO Entry."
								},
								"name": {
									"type": "string",
									"description": "The name of the SSO Entry (used as the SourceId parameter)."
								},
								"idpLoginUrl": {
									"type": "string",
									"description": "URL for SSO users to be redirected to for logins"
								},
								"registerUrl": {
									"type": "string",
									"description": "Used to show registration page if user does not exist and\ncreateUserIfNotExist is false\n"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/ssoPublicInfo": {
			"get": {
				"summary": "Retrieve an SSO RegisterUrl by its reference.",
				"description": "This endpoint returns the SSO Public information identified by the supplied `ref`erence path parameter.\n",
				"operationId": "getSsoPublicByOrigin",
				"tags": ["Security"],
				"responses": {
					"200": {
						"description": "The SSO Public information.",
						"schema": {
							"type": "object",
							"properties": {
								"displayName": {
									"type": "string",
									"description": "The display name of the SSO Entry."
								},
								"name": {
									"type": "string",
									"description": "The name of the SSO Entry (used as the SourceId parameter)."
								},
								"idpLoginUrl": {
									"type": "string",
									"description": "URL for SSO users to be redirected to for logins"
								},
								"registerUrl": {
									"type": "string",
									"description": "Used to show registration page if user does not exist and\ncreateUserIfNotExist is false\n"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/sso/saml2/acs": {
			"post": {
				"summary": "SSO using SAML 2 Assertion Consumer Service POST binding.",
				"description": "The SAML2 SSO Assertion Consumer Service using POST binding\nThis will validate the SAML assertion against the known Identity Providers,\ncreate an Oauth refresh token, and redirect the browser to the front end\npage that will take this token, and get a valid Oauth token.\n",
				"operationId": "processAssertion",
				"consumes": ["application/x-www-form-urlencoded"],
				"parameters": [{
					"name": "SamlResponse",
					"description": "SAML2 Response.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["SAMLResponse"],
						"properties": {
							"SAMLResponse": {
								"type": "string",
								"description": "The SAML Response from the IDP."
							}
						}
					}
				},
				{
					"name": "CustomerId",
					"description": "Customer Identifier",
					"in": "query",
					"required": true,
					"type": "string"
				},
				{
					"name": "SourceId",
					"description": "Source Identifier",
					"in": "query",
					"required": true,
					"type": "string"
				}],
				"tags": ["Security"],
				"responses": {
					"200": {
						"description": "Redirection to front end URI including refresh token.",
						"schema": {
							"type": "object",
							"required": ["access_token"],
							"properties": {
								"access_token": {
									"type": "string",
									"description": "A valid authorization token."
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/transfer/import": {
			"post": {
				"summary": "Import data into the system.",
				"description": "This endpoint imports data into the system.\n",
				"operationId": "importByType",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "import",
					"description": "The import definition.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["type",
						"uri"],
						"properties": {
							"type": {
								"type": "string",
								"description": "The type of data being imported into the system.",
								"enum": ["brand",
								"location",
								"artwork-type",
								"users"]
							},
							"uri": {
								"type": "string",
								"description": "The uri of the file to import."
							}
						}
					}
				}],
				"tags": ["Transfer"],
				"responses": {
					"200": {
						"description": "The imported documents.",
						"schema": {
							"type": "array",
							"items": {
								"type": "object"
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/transfer/export": {
			"post": {
				"summary": "Export data from the system.",
				"description": "This endpoint exports data from the system.\n",
				"operationId": "exportByType",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "import",
					"description": "The export definition.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["type"],
						"properties": {
							"type": {
								"type": "string",
								"description": "The type of data being exported from the system.",
								"enum": ["brand",
								"location",
								"artwork-type",
								"users"]
							},
							"format": {
								"type": "string",
								"description": "The format of the exported data.",
								"enum": ["xlsx"]
							}
						}
					}
				}],
				"tags": ["Transfer"],
				"responses": {
					"200": {
						"description": "The exported document reference.",
						"schema": {
							"type": "file"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/token": {
			"post": {
				"summary": "Create a bearer authentication token.",
				"description": "The Token endpoint returns an authentication token which can be used in subsequent calls to the\n**Elateral** api. Use this endpoint to retrieve a token and then supply it as a _Authorization_ header in\nthe format **Bearer {token}** in all other api requests.\n",
				"operationId": "getToken",
				"parameters": [{
					"name": "X_CLIENT_ID",
					"description": "The id of the client requesting the token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "credentials",
					"description": "Users credentials.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["username",
						"password"],
						"properties": {
							"username": {
								"type": "string",
								"description": "The users username.",
								"minLength": 5,
								"maxLength": 10
							},
							"password": {
								"type": "string",
								"description": "The users password."
							}
						}
					}
				}],
				"tags": ["Security"],
				"responses": {
					"200": {
						"description": "The `bearer` token.",
						"schema": {
							"type": "object",
							"required": ["token",
							"password"],
							"properties": {
								"token": {
									"type": "string",
									"description": "The activation token."
								},
								"password": {
									"type": "string",
									"description": "The users password."
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/users": {
			"get": {
				"summary": "Retrieve all users.",
				"description": "This endpoint returns all users controlled by the **Elateral** api.\n",
				"operationId": "getUsers",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "limit",
					"description": "Limits the size of the collection returned e.g. `?limit=10` to return at most 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "skip",
					"description": "Ignores the first `n` items from the result set e.g. `?skip=10` to skip 10 documents.",
					"in": "query",
					"type": "number"
				},
				{
					"name": "sort",
					"description": "Sorts the results based on the supplied criteria e.g. `?sort=-username`\nto sort the documents in descending username order.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "query",
					"description": "Filters the results based on the supplied criteria e.g. `?query={\"name\":\"Bob\"}\nto filter the results to those documents with a name property of __Bob__\n",
					"in": "query",
					"type": "string",
					"default": "{}"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				}],
				"tags": ["User"],
				"responses": {
					"200": {
						"description": "All users.",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"count": {
										"type": "number"
									}
								}
							},
							{
								"properties": {
									"results": {
										"type": "array",
										"items": {
											"type": "object",
											"required": ["firstName",
											"lastName",
											"username",
											"email"],
											"properties": {
												"firstName": {
													"type": "string",
													"description": "The users first name."
												},
												"lastName": {
													"type": "string",
													"description": "The users last name."
												},
												"username": {
													"type": "string",
													"description": "The users username (unique)."
												},
												"email": {
													"type": "string",
													"format": "email",
													"description": "The users email address."
												},
												"password": {
													"type": "string",
													"description": "The users password."
												},
												"language": {
													"type": "string",
													"description": "The users default language."
												},
												"status": {
													"type": "number",
													"description": "The status of the user; 0 ~ inactive, 1 ~ active",
													"enum": [0,
													1]
												},
												"timeZone": {
													"type": "string",
													"description": "The users default time zone."
												},
												"roles": {
													"type": "array",
													"items": {
														"type": "string"
													}
												},
												"defaultAddress": {
													"type": "string",
													"description": "A ref to the user's default address"
												},
												"agencyCode": {
													"type": "string",
													"description": "Short code to represent the agency the user represents"
												},
												"ssoEntry": {
													"type": "string",
													"description": "The reference to the SSOEntry for this user (for a non-SSO user, use null)"
												},
												"phone": {
													"type": "string",
													"description": "User's phone number"
												}
											}
										}
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a user",
				"description": "This endpoint enables clients to create a user.\n",
				"operationId": "createUser",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "user",
					"description": "The new users details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["firstName",
						"lastName",
						"username",
						"email"],
						"properties": {
							"firstName": {
								"type": "string",
								"description": "The users first name."
							},
							"lastName": {
								"type": "string",
								"description": "The users last name."
							},
							"username": {
								"type": "string",
								"description": "The users username (unique)."
							},
							"email": {
								"type": "string",
								"format": "email",
								"description": "The users email address."
							},
							"password": {
								"type": "string",
								"description": "The users password."
							},
							"language": {
								"type": "string",
								"description": "The users default language."
							},
							"status": {
								"type": "number",
								"description": "The status of the user; 0 ~ inactive, 1 ~ active",
								"enum": [0,
								1]
							},
							"timeZone": {
								"type": "string",
								"description": "The users default time zone."
							},
							"roles": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"defaultAddress": {
								"type": "string",
								"description": "A ref to the user's default address"
							},
							"agencyCode": {
								"type": "string",
								"description": "Short code to represent the agency the user represents"
							},
							"ssoEntry": {
								"type": "string",
								"description": "The reference to the SSOEntry for this user (for a non-SSO user, use null)"
							},
							"phone": {
								"type": "string",
								"description": "User's phone number"
							}
						}
					}
				}],
				"tags": ["User"],
				"responses": {
					"201": {
						"description": "The new user.",
						"schema": {
							"type": "object",
							"required": ["firstName",
							"lastName",
							"username",
							"email"],
							"properties": {
								"firstName": {
									"type": "string",
									"description": "The users first name."
								},
								"lastName": {
									"type": "string",
									"description": "The users last name."
								},
								"username": {
									"type": "string",
									"description": "The users username (unique)."
								},
								"email": {
									"type": "string",
									"format": "email",
									"description": "The users email address."
								},
								"password": {
									"type": "string",
									"description": "The users password."
								},
								"language": {
									"type": "string",
									"description": "The users default language."
								},
								"status": {
									"type": "number",
									"description": "The status of the user; 0 ~ inactive, 1 ~ active",
									"enum": [0,
									1]
								},
								"timeZone": {
									"type": "string",
									"description": "The users default time zone."
								},
								"roles": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"defaultAddress": {
									"type": "string",
									"description": "A ref to the user's default address"
								},
								"agencyCode": {
									"type": "string",
									"description": "Short code to represent the agency the user represents"
								},
								"ssoEntry": {
									"type": "string",
									"description": "The reference to the SSOEntry for this user (for a non-SSO user, use null)"
								},
								"phone": {
									"type": "string",
									"description": "User's phone number"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/users/{ref}": {
			"get": {
				"summary": "Retrieve a user by its reference.",
				"description": "This endpoint returns the user identified by the supplied `ref`erence path parameter.\n",
				"operationId": "getUser",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "populate",
					"description": "Use this parameter to populate child entities of the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "select",
					"description": "Use this parameter to restrict the selection of properties from the document(s) you're retrieving.\n",
					"in": "query",
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["User"],
				"responses": {
					"200": {
						"description": "The user.",
						"schema": {
							"type": "object",
							"required": ["firstName",
							"lastName",
							"username",
							"email"],
							"properties": {
								"firstName": {
									"type": "string",
									"description": "The users first name."
								},
								"lastName": {
									"type": "string",
									"description": "The users last name."
								},
								"username": {
									"type": "string",
									"description": "The users username (unique)."
								},
								"email": {
									"type": "string",
									"format": "email",
									"description": "The users email address."
								},
								"password": {
									"type": "string",
									"description": "The users password."
								},
								"language": {
									"type": "string",
									"description": "The users default language."
								},
								"status": {
									"type": "number",
									"description": "The status of the user; 0 ~ inactive, 1 ~ active",
									"enum": [0,
									1]
								},
								"timeZone": {
									"type": "string",
									"description": "The users default time zone."
								},
								"roles": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"defaultAddress": {
									"type": "string",
									"description": "A ref to the user's default address"
								},
								"agencyCode": {
									"type": "string",
									"description": "Short code to represent the agency the user represents"
								},
								"ssoEntry": {
									"type": "string",
									"description": "The reference to the SSOEntry for this user (for a non-SSO user, use null)"
								},
								"phone": {
									"type": "string",
									"description": "User's phone number"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Modify a user by its reference.",
				"description": "This endpoint modifies the user identified by the supplied `ref`erence path parameter.\n",
				"operationId": "modifyUser",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				},
				{
					"name": "user",
					"description": "The modified users details.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["firstName",
						"lastName",
						"username",
						"email"],
						"properties": {
							"firstName": {
								"type": "string",
								"description": "The users first name."
							},
							"lastName": {
								"type": "string",
								"description": "The users last name."
							},
							"username": {
								"type": "string",
								"description": "The users username (unique)."
							},
							"email": {
								"type": "string",
								"format": "email",
								"description": "The users email address."
							},
							"password": {
								"type": "string",
								"description": "The users password."
							},
							"language": {
								"type": "string",
								"description": "The users default language."
							},
							"status": {
								"type": "number",
								"description": "The status of the user; 0 ~ inactive, 1 ~ active",
								"enum": [0,
								1]
							},
							"timeZone": {
								"type": "string",
								"description": "The users default time zone."
							},
							"roles": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"defaultAddress": {
								"type": "string",
								"description": "A ref to the user's default address"
							},
							"agencyCode": {
								"type": "string",
								"description": "Short code to represent the agency the user represents"
							},
							"ssoEntry": {
								"type": "string",
								"description": "The reference to the SSOEntry for this user (for a non-SSO user, use null)"
							},
							"phone": {
								"type": "string",
								"description": "User's phone number"
							}
						}
					}
				}],
				"tags": ["User"],
				"responses": {
					"200": {
						"description": "The updated user.",
						"schema": {
							"type": "object",
							"required": ["firstName",
							"lastName",
							"username",
							"email"],
							"properties": {
								"firstName": {
									"type": "string",
									"description": "The users first name."
								},
								"lastName": {
									"type": "string",
									"description": "The users last name."
								},
								"username": {
									"type": "string",
									"description": "The users username (unique)."
								},
								"email": {
									"type": "string",
									"format": "email",
									"description": "The users email address."
								},
								"password": {
									"type": "string",
									"description": "The users password."
								},
								"language": {
									"type": "string",
									"description": "The users default language."
								},
								"status": {
									"type": "number",
									"description": "The status of the user; 0 ~ inactive, 1 ~ active",
									"enum": [0,
									1]
								},
								"timeZone": {
									"type": "string",
									"description": "The users default time zone."
								},
								"roles": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"defaultAddress": {
									"type": "string",
									"description": "A ref to the user's default address"
								},
								"agencyCode": {
									"type": "string",
									"description": "Short code to represent the agency the user represents"
								},
								"ssoEntry": {
									"type": "string",
									"description": "The reference to the SSOEntry for this user (for a non-SSO user, use null)"
								},
								"phone": {
									"type": "string",
									"description": "User's phone number"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a user by its reference.",
				"description": "This endpoint deletes the user identified by the supplied `ref`erence path parameter.\n",
				"operationId": "deleteUser",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				},
				{
					"name": "ref",
					"description": "Use this path parameter to define the id of the document object.\n",
					"in": "path",
					"required": true,
					"type": "string"
				}],
				"tags": ["User"],
				"responses": {
					"204": {
						"description": "Deleted the user."
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/me": {
			"get": {
				"summary": "Retrieve a the current user.",
				"description": "This endpoint returns the current user.\n",
				"operationId": "getCurrentUser",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				}],
				"tags": ["User"],
				"responses": {
					"200": {
						"description": "The user.",
						"schema": {
							"type": "object",
							"required": ["firstName",
							"lastName",
							"username",
							"email"],
							"properties": {
								"firstName": {
									"type": "string",
									"description": "The users first name."
								},
								"lastName": {
									"type": "string",
									"description": "The users last name."
								},
								"username": {
									"type": "string",
									"description": "The users username (unique)."
								},
								"email": {
									"type": "string",
									"format": "email",
									"description": "The users email address."
								},
								"password": {
									"type": "string",
									"description": "The users password."
								},
								"language": {
									"type": "string",
									"description": "The users default language."
								},
								"status": {
									"type": "number",
									"description": "The status of the user; 0 ~ inactive, 1 ~ active",
									"enum": [0,
									1]
								},
								"timeZone": {
									"type": "string",
									"description": "The users default time zone."
								},
								"roles": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"defaultAddress": {
									"type": "string",
									"description": "A ref to the user's default address"
								},
								"agencyCode": {
									"type": "string",
									"description": "Short code to represent the agency the user represents"
								},
								"ssoEntry": {
									"type": "string",
									"description": "The reference to the SSOEntry for this user (for a non-SSO user, use null)"
								},
								"phone": {
									"type": "string",
									"description": "User's phone number"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/activate": {
			"post": {
				"summary": "Activate a user",
				"description": "This endpoint enables clients to activate a user.\n",
				"operationId": "activateUser",
				"parameters": [{
					"name": "token",
					"description": "The new users password.",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["token",
						"password"],
						"properties": {
							"token": {
								"type": "string",
								"description": "The activation token."
							},
							"password": {
								"type": "string",
								"description": "The users password."
							}
						}
					}
				}],
				"tags": ["User"],
				"responses": {
					"200": {
						"description": "The activated user.",
						"schema": {
							"type": "object",
							"required": ["firstName",
							"lastName",
							"username",
							"email"],
							"properties": {
								"firstName": {
									"type": "string",
									"description": "The users first name."
								},
								"lastName": {
									"type": "string",
									"description": "The users last name."
								},
								"username": {
									"type": "string",
									"description": "The users username (unique)."
								},
								"email": {
									"type": "string",
									"format": "email",
									"description": "The users email address."
								},
								"password": {
									"type": "string",
									"description": "The users password."
								},
								"language": {
									"type": "string",
									"description": "The users default language."
								},
								"status": {
									"type": "number",
									"description": "The status of the user; 0 ~ inactive, 1 ~ active",
									"enum": [0,
									1]
								},
								"timeZone": {
									"type": "string",
									"description": "The users default time zone."
								},
								"roles": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"defaultAddress": {
									"type": "string",
									"description": "A ref to the user's default address"
								},
								"agencyCode": {
									"type": "string",
									"description": "Short code to represent the agency the user represents"
								},
								"ssoEntry": {
									"type": "string",
									"description": "The reference to the SSOEntry for this user (for a non-SSO user, use null)"
								},
								"phone": {
									"type": "string",
									"description": "User's phone number"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/all/users": {
			"get": {
				"summary": "Retrieve all users.",
				"description": "This endpoint returns all users controlled by the **Elateral** api.\n",
				"operationId": "getAllUsers",
				"security": [{
					"token": []
				}],
				"parameters": [{
					"name": "Authorization",
					"description": "The `bearer` token.",
					"in": "header",
					"required": true,
					"type": "string"
				}],
				"tags": ["User"],
				"responses": {
					"200": {
						"description": "All users.",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"count": {
										"type": "number"
									}
								}
							},
							{
								"properties": {
									"results": {
										"type": "array",
										"items": {
											"type": "object",
											"required": ["firstName",
											"lastName",
											"username",
											"email"],
											"properties": {
												"firstName": {
													"type": "string",
													"description": "The users first name."
												},
												"lastName": {
													"type": "string",
													"description": "The users last name."
												},
												"username": {
													"type": "string",
													"description": "The users username (unique)."
												},
												"email": {
													"type": "string",
													"format": "email",
													"description": "The users email address."
												},
												"password": {
													"type": "string",
													"description": "The users password."
												},
												"language": {
													"type": "string",
													"description": "The users default language."
												},
												"status": {
													"type": "number",
													"description": "The status of the user; 0 ~ inactive, 1 ~ active",
													"enum": [0,
													1]
												},
												"timeZone": {
													"type": "string",
													"description": "The users default time zone."
												},
												"roles": {
													"type": "array",
													"items": {
														"type": "string"
													}
												},
												"defaultAddress": {
													"type": "string",
													"description": "A ref to the user's default address"
												},
												"agencyCode": {
													"type": "string",
													"description": "Short code to represent the agency the user represents"
												},
												"ssoEntry": {
													"type": "string",
													"description": "The reference to the SSOEntry for this user (for a non-SSO user, use null)"
												},
												"phone": {
													"type": "string",
													"description": "User's phone number"
												}
											}
										}
									}
								}
							}]
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"message": {
									"type": "string"
								},
								"status": {
									"type": "integer",
									"format": "int32"
								},
								"stack": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		}
	}
}